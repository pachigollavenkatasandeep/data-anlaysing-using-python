{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fjGZtLovS90J","executionInfo":{"status":"ok","timestamp":1708663964639,"user_tz":-330,"elapsed":711,"user":{"displayName":"Aparna Mullapudi","userId":"02853002963215214607"}},"outputId":"4747db68-a771-44cb-bdc9-dd502aacf20b"},"outputs":[{"output_type":"stream","name":"stdout","text":["I am 10 years old\n"]}],"source":["#variable\n","a=10\n","print(\"I am\",a, \"years old\")"]},{"cell_type":"code","source":["#arithmetic ops on integer variables\n","a=int(input(\"Enter first number: \"))\n","b=int(input(\"Enter second number: \"))\n","print(\"Sum: \",a+b)\n","print(\"Difference: \",a-b)\n","print(\"Product: \",a*b)\n","print(\"Division: \",a/b)\n","print(\"Remainder: \",a%b)\n","print(\"power: \",a**b)\n","print(\"Floor division: \",a//b)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1uPINT8zUvsV","executionInfo":{"status":"ok","timestamp":1708665259909,"user_tz":-330,"elapsed":11568,"user":{"displayName":"Aparna Mullapudi","userId":"02853002963215214607"}},"outputId":"d5a792bb-f4d1-4b66-eaa4-049bf4cf3060"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter first number: 500\n","Enter second number: 200\n","Sum:  700\n","Difference:  300\n","Product:  100000\n","Division:  2.5\n","Remainder:  100\n","power:  622301527786114170714406405378012424059025216872116713310111661478969883403538344118394482312571361695696658955512248212471604347229003906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n","Floor division:  2\n"]}]},{"cell_type":"code","source":["#Take a number from the user which is salary,if the salary is more than 50,000 there is 10% tax print his final salary\n","a=int(input(\"Enter the salary\"))\n","if(a>=50000):\n","  print(\"Final salary is\",a-(a*(10/100)))\n","else:\n","  print(\"The salary is less than 50000 \")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZX3hqo3mY0iE","executionInfo":{"status":"ok","timestamp":1708713057605,"user_tz":-330,"elapsed":9790,"user":{"displayName":"Aparna Mullapudi","userId":"02853002963215214607"}},"outputId":"dd65d5b3-a64e-423a-8dbb-092c6849b4a0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the salary78000\n","Final salary is 70200.0\n"]}]},{"cell_type":"code","source":["#Get the salary from the user if the salary is more than or equal to 50K apply 10% tax detection,if the salary is less than 50K apply 5% tax,if the salary is more than 70K apply 12%tax,if your salary Exceeds 100K print your promoted to next level\n","a=int(input(\"Enter your salary: \"))\n","if(a<=50000):\n","  print(\"Final salary is\",a-(a*(5/100)))\n","elif(a<=70000):\n","  print(\"Final salary is\",a-(a*(10/100)))\n","elif(a<=100000):\n","  print(\"Final salary is\",a-(a*(12/100)))\n","else:\n","  print(\"You are promoted to next level\")"],"metadata":{"id":"EWqMeoZHc1y-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#for loop\n","a=range(1,11)\n","n=int(input(\"Enter the value\"))\n","for i in a:\n","  m=n*i\n","  print(n,\"*\",i,\"=\",m)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c22DKguqnGf3","executionInfo":{"status":"ok","timestamp":1708670222645,"user_tz":-330,"elapsed":3504,"user":{"displayName":"Aparna Mullapudi","userId":"02853002963215214607"}},"outputId":"63bf345c-88d2-42bc-b1f7-c4239085e580"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the value6\n","6 * 1 = 6\n","6 * 2 = 12\n","6 * 3 = 18\n","6 * 4 = 24\n","6 * 5 = 30\n","6 * 6 = 36\n","6 * 7 = 42\n","6 * 8 = 48\n","6 * 9 = 54\n","6 * 10 = 60\n"]}]},{"cell_type":"code","source":["#while loop\n","n=int(input(\"Enter no: \"))\n","i=1\n","while(i<=10):\n","  m=n*i\n","  print(n,\"*\",i,\"=\",m)\n","  i=i+1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p0epNS27r8iu","executionInfo":{"status":"ok","timestamp":1708670476799,"user_tz":-330,"elapsed":4501,"user":{"displayName":"Aparna Mullapudi","userId":"02853002963215214607"}},"outputId":"1995d445-dd43-4be9-93a0-d5802144f37f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter no: 7\n","7 * 1 = 7\n","7 * 2 = 14\n","7 * 3 = 21\n","7 * 4 = 28\n","7 * 5 = 35\n","7 * 6 = 42\n","7 * 7 = 49\n","7 * 8 = 56\n","7 * 9 = 63\n","7 * 10 = 70\n"]}]},{"cell_type":"code","source":["#list\n","l1=[6,'Appu',25.6,True]\n","for i in l1:\n","  print(i)\n","l1.append('Mullapudi')\n","print(l1)\n","l1.insert(4,'hi')\n","print(l1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vTAJLETbe-Av","executionInfo":{"status":"ok","timestamp":1708671368721,"user_tz":-330,"elapsed":614,"user":{"displayName":"Aparna Mullapudi","userId":"02853002963215214607"}},"outputId":"6108f0ca-968c-49f7-ae60-951165006dde"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["6\n","Appu\n","25.6\n","True\n","[6, 'Appu', 25.6, True, 'Mullapudi']\n","[6, 'Appu', 25.6, True, 'hi', 'Mullapudi']\n"]}]},{"cell_type":"code","source":["l1=[6,'Appu',25.6,True]\n","l2=['apple','banana']\n","#list1.extend(list2)\n","l1.extend(l2)#l1+l2\n","print(l1)\n","l1.pop(2)\n","print(l1)\n","l1.remove('Appu')\n","print(l1)\n","l1.clear()\n","print(l1)"],"metadata":{"id":"2Z5oOowKwDhR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708715760321,"user_tz":-330,"elapsed":3,"user":{"displayName":"Aparna Mullapudi","userId":"02853002963215214607"}},"outputId":"5319cf79-add5-4758-aae1-8b0fffe2667c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[6, 'Appu', 25.6, True, 'apple', 'banana']\n","[6, 'Appu', True, 'apple', 'banana']\n","[6, True, 'apple', 'banana']\n","[]\n"]}]},{"cell_type":"code","source":["#create a list of 10 integer elements ,print their squares,save this squares in new list\n","l=[6,23,45,89,12,90,34,78,56,66]\n","l1=[]\n","for i in l:\n","  l1.append(i*i)\n","print(l1)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HjPntbGX0HiJ","executionInfo":{"status":"ok","timestamp":1708672790907,"user_tz":-330,"elapsed":464,"user":{"displayName":"Aparna Mullapudi","userId":"02853002963215214607"}},"outputId":"e0c0fcb2-53c8-4af9-9d68-485597a0c3fa"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[36, 529, 2025, 7921, 144, 8100, 1156, 6084, 3136, 4356]\n"]}]},{"cell_type":"code","source":["#LC\n","\n","l=[6,23,45,89,12,90,34,78,56,66]\n","l1=[i*i for i in l if i>50]\n","print(l1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XrA4SVf717i0","executionInfo":{"status":"ok","timestamp":1708673278263,"user_tz":-330,"elapsed":505,"user":{"displayName":"Aparna Mullapudi","userId":"02853002963215214607"}},"outputId":"68d073da-7b49-43a6-f6b0-ab548fcfea36"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[7921, 8100, 6084, 3136, 4356]\n"]}]},{"cell_type":"code","source":["#LC\n","#newlist=[(st of if) if(cond) else (st of else) for]\n","l=[6,23,45,89,12,90,34,78,56,66]\n","l1=[i*i if i>50 else 'X' for i in l]\n","print(l1)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yEnRPGNnIuTE","executionInfo":{"status":"ok","timestamp":1708678039611,"user_tz":-330,"elapsed":10,"user":{"displayName":"Aparna Mullapudi","userId":"02853002963215214607"}},"outputId":"00298de1-cfdb-454a-9b75-6ee9f9f92c2c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['X', 'X', 'X', 7921, 'X', 8100, 'X', 6084, 3136, 4356]\n"]}]},{"cell_type":"code","source":["#Take the salary from the user if salary is less than 50K -10% tax otherwise 15 % tax\n","n=int(input(\"Enter the salary: \"))\n","l=[n-(n*(10/100)) if n<50000 else n-(n*(15/100))]\n","print(l)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WPT4qA3gJ61V","executionInfo":{"status":"ok","timestamp":1708678907642,"user_tz":-330,"elapsed":12816,"user":{"displayName":"Aparna Mullapudi","userId":"02853002963215214607"}},"outputId":"d58604bc-e30a-4fad-dbc2-eb70e8b102b9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the salary: 25000\n","[22500.0]\n"]}]},{"cell_type":"code","source":["#Take the salary from the user if salary is less than 50K -10% tax otherwise 15 % tax\n","s=[25000,78000,90000,10000,45000]\n","res=[i-(i*(10/100)) if n<50000 else i-(i*(15/100)) for i in s]\n","print(res)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7z08jrQ9L3mn","executionInfo":{"status":"ok","timestamp":1708678812912,"user_tz":-330,"elapsed":627,"user":{"displayName":"Aparna Mullapudi","userId":"02853002963215214607"}},"outputId":"3ee3e3eb-f117-405f-9420-9af23eeeb949"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[22500.0, 70200.0, 81000.0, 9000.0, 40500.0]\n"]}]},{"cell_type":"code","source":["#create dict\n","dict={\"Mentor\":\"Jwalitha\",33:\"Aparna\",34:\"Sam\",35:\"Sitara\"}\n","print(dict)\n","print(dict.keys())\n","print(dict.values())\n","print(dict[35])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xlV5ebqeOBH5","executionInfo":{"status":"ok","timestamp":1708679629620,"user_tz":-330,"elapsed":473,"user":{"displayName":"Aparna Mullapudi","userId":"02853002963215214607"}},"outputId":"158a58ad-a048-487b-84bb-4689c87f3c10"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'Mentor': 'Jwalitha', 33: 'Aparna', 34: 'Sam', 35: 'Sitara'}\n","dict_keys(['Mentor', 33, 34, 35])\n","dict_values(['Jwalitha', 'Aparna', 'Sam', 'Sitara'])\n","Sitara\n"]}]},{"cell_type":"code","source":["dict1={\"Dept\":\"CSE\",\"details\":{\"year\":\"II\",\"SEC\":\"D\",\"Count\":71}}\n","print(dict1[\"details\"][\"SEC\"])\n","print(\"Year is\",dict1[\"details\"][\"year\"])\n","print(\"Section is\",dict1[\"details\"][\"SEC\"])\n","print(\"Strength is\",dict1[\"details\"][\"Count\"])\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3daXqdqlQiHw","executionInfo":{"status":"ok","timestamp":1708680231487,"user_tz":-330,"elapsed":620,"user":{"displayName":"Aparna Mullapudi","userId":"02853002963215214607"}},"outputId":"ffde5d3b-43b4-4fe1-ea69-04f78301ef57"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["D\n","Year is II\n","Section is D\n","Strength is 71\n"]}]},{"cell_type":"code","source":["#zip function\n","idl=[25,56,78,21,89]\n","names=[\"Joe\",\"Suchi\",\"Sruthi\",\"Aparna\",\"Satya\"]\n","new_zip=zip(idl,names)\n","for i in new_zip:\n","  print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rD-eSrxSSYue","executionInfo":{"status":"ok","timestamp":1708680542651,"user_tz":-330,"elapsed":894,"user":{"displayName":"Aparna Mullapudi","userId":"02853002963215214607"}},"outputId":"3cc98f0c-d6c0-4695-872f-5d7535c45985"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(25, 'Joe')\n","(56, 'Suchi')\n","(78, 'Sruthi')\n","(21, 'Aparna')\n","(89, 'Satya')\n"]}]},{"cell_type":"code","source":["#zip function and displaying it in dict by using inbuilt func\n","from builtins import dict\n","idl=[25,56,78,21,89]\n","names=[\"Joe\",\"Suchi\",\"Sruthi\",\"Aparna\",\"Satya\"]\n","new_zip=dict(zip(idl,names))\n","print(new_zip)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TjAmbSasb2-I","executionInfo":{"status":"ok","timestamp":1708682990093,"user_tz":-330,"elapsed":5,"user":{"displayName":"Aparna Mullapudi","userId":"02853002963215214607"}},"outputId":"cca1126f-f34c-4c86-ef51-e224b563a64b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{25: 'Joe', 56: 'Suchi', 78: 'Sruthi', 21: 'Aparna', 89: 'Satya'}\n"]}]},{"cell_type":"code","source":["#Numpy\n","import numpy as np\n","A=np.array([1,2,3,4]) #1d array\n","print(A.ndim)\n","print(A.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5zf1h0jzTlyP","executionInfo":{"status":"ok","timestamp":1708683696139,"user_tz":-330,"elapsed":401,"user":{"displayName":"Aparna Mullapudi","userId":"02853002963215214607"}},"outputId":"20d9f42f-0041-43db-ff00-4ff77777d861"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","(4,)\n"]}]},{"cell_type":"code","source":["#Numpy 2d array\n","A=np.array([[1,2,3,4],[5,6,7,8]]) #2D array\n","#elements in each row is equal to columns\n","B=np.array([[[1,2,3,4],[5,6,7,8]],[[9,10,11,12],[13,14,15,16]]])\n","print(A.ndim)\n","print(A.shape)\n","print(A)\n","print(B.ndim)#dimensions\n","print(B.shape)#no of rows,columns\n","print(B)\n","C=np.ones([2,4])\n","print(C)\n","D=np.zeros([2,4])\n","print(D)\n","E=np.eye(4,4)#identity matrix\n","print(E)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1ZQe7aySfVOi","executionInfo":{"status":"ok","timestamp":1708685089097,"user_tz":-330,"elapsed":515,"user":{"displayName":"Aparna Mullapudi","userId":"02853002963215214607"}},"outputId":"dc6f3509-8f43-4a60-db87-814ce6ef45a1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n","(2, 4)\n","[[1 2 3 4]\n"," [5 6 7 8]]\n","3\n","(2, 2, 4)\n","[[[ 1  2  3  4]\n","  [ 5  6  7  8]]\n","\n"," [[ 9 10 11 12]\n","  [13 14 15 16]]]\n","[[1. 1. 1. 1.]\n"," [1. 1. 1. 1.]]\n","[[0. 0. 0. 0.]\n"," [0. 0. 0. 0.]]\n","[[1. 0. 0. 0.]\n"," [0. 1. 0. 0.]\n"," [0. 0. 1. 0.]\n"," [0. 0. 0. 1.]]\n"]}]},{"cell_type":"code","source":["#range of matrix\n","A=np.arange(1,50,2)#(start,stop,step)\n","print(A)\n","print(type(A))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8VmAgzI3kpqX","executionInfo":{"status":"ok","timestamp":1708685280721,"user_tz":-330,"elapsed":432,"user":{"displayName":"Aparna Mullapudi","userId":"02853002963215214607"}},"outputId":"fa878f02-5938-4e1a-8806-19dfa450154b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[ 1  3  5  7  9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47\n"," 49]\n","<class 'numpy.ndarray'>\n"]}]},{"cell_type":"code","source":["#print all the numbers that are divisible by 8 using arrange b/w range 1000\n","A=np.arange(0,1001,8)\n","print(A)\n","print(type(A))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LrCpZE3JlFeR","executionInfo":{"status":"ok","timestamp":1708685608037,"user_tz":-330,"elapsed":1132,"user":{"displayName":"Aparna Mullapudi","userId":"02853002963215214607"}},"outputId":"1fb4061d-c4fa-4a4a-b8f9-4eae254d20e3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[   0    8   16   24   32   40   48   56   64   72   80   88   96  104\n","  112  120  128  136  144  152  160  168  176  184  192  200  208  216\n","  224  232  240  248  256  264  272  280  288  296  304  312  320  328\n","  336  344  352  360  368  376  384  392  400  408  416  424  432  440\n","  448  456  464  472  480  488  496  504  512  520  528  536  544  552\n","  560  568  576  584  592  600  608  616  624  632  640  648  656  664\n","  672  680  688  696  704  712  720  728  736  744  752  760  768  776\n","  784  792  800  808  816  824  832  840  848  856  864  872  880  888\n","  896  904  912  920  928  936  944  952  960  968  976  984  992 1000]\n","<class 'numpy.ndarray'>\n"]}]},{"cell_type":"code","source":["A=np.linspace(2,3,12)#(start,stop,how many parts)\n","print(A)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XfJjjonKmlzs","executionInfo":{"status":"ok","timestamp":1708685801450,"user_tz":-330,"elapsed":487,"user":{"displayName":"Aparna Mullapudi","userId":"02853002963215214607"}},"outputId":"2f610e79-daf5-452e-9861-12affe2848e0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[2.         2.09090909 2.18181818 2.27272727 2.36363636 2.45454545\n"," 2.54545455 2.63636364 2.72727273 2.81818182 2.90909091 3.        ]\n"]}]},{"cell_type":"code","source":["#spliting the range of numbers into n numbers having common difference\n","A=np.linspace(50,100,19)\n","print(A)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z1PIEil2nEHK","executionInfo":{"status":"ok","timestamp":1708685933215,"user_tz":-330,"elapsed":399,"user":{"displayName":"Aparna Mullapudi","userId":"02853002963215214607"}},"outputId":"8a13f0db-f9e2-48bc-f971-2571ec0c61c6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[ 50.          52.77777778  55.55555556  58.33333333  61.11111111\n","  63.88888889  66.66666667  69.44444444  72.22222222  75.\n","  77.77777778  80.55555556  83.33333333  86.11111111  88.88888889\n","  91.66666667  94.44444444  97.22222222 100.        ]\n"]}]}]}