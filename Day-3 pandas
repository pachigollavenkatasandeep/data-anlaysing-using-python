{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOkQiCSn5khh5EE6fHm0jDU"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":6,"metadata":{"id":"hJR7Zdj3xikt","executionInfo":{"status":"ok","timestamp":1708936928726,"user_tz":-330,"elapsed":3,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}}},"outputs":[],"source":["#importing pandas\n","import pandas as pd"]},{"cell_type":"code","source":["import pandas as pd\n","a=[\"sandeep\",\"aparna\",\"dhanush\",\"yugi\",\"purna\",\"sitara\"]\n","r=pd.Series(a, index =[67,32,44,66,88,12])\n","print(r)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8A01GLCTzfcA","executionInfo":{"status":"ok","timestamp":1708924153008,"user_tz":-330,"elapsed":420,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"bdbd0f02-c7f3-4464-90a9-dab1319a01d8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["67    sandeep\n","32     aparna\n","44    dhanush\n","66       yugi\n","88      purna\n","12     sitara\n","dtype: object\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","a=[\"sandeep\",\"aparna\",\"dhanush\",\"yugi\",\"purna\",\"sitara\"]\n","r=pd.Series(a, index =[67,32,44,66,88,12])\n","print(r)\n","pd.Series(32,index=[4])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iRv_8Ei90j3C","executionInfo":{"status":"ok","timestamp":1708924367844,"user_tz":-330,"elapsed":488,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"2730fb13-cbca-4b6b-aa5c-8f74871907e3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["67    sandeep\n","32     aparna\n","44    dhanush\n","66       yugi\n","88      purna\n","12     sitara\n","dtype: object\n"]},{"output_type":"execute_result","data":{"text/plain":["4    32\n","dtype: int64"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["#series\n","#pd.Series(col,ind)"],"metadata":{"id":"MvhOy9aD1JhF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#loading csv\n","dia=pd.read_csv(\"/content/diabetcsv (1).csv\")\n","dia"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"rzNoHkzK2qgB","executionInfo":{"status":"ok","timestamp":1708924828679,"user_tz":-330,"elapsed":1018,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"3f66dd7b-8e4c-4c30-8430-64663c42d8b4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     preg  plas  pres  skin  insu  mass   pedi  age            class\n","0       6   148    72    35     0  33.6  0.627   50  tested_positive\n","1       1    85    66    29     0  26.6  0.351   31  tested_negative\n","2       8   183    64     0     0  23.3  0.672   32  tested_positive\n","3       1    89    66    23    94  28.1  0.167   21  tested_negative\n","4       0   137    40    35   168  43.1  2.288   33  tested_positive\n","..    ...   ...   ...   ...   ...   ...    ...  ...              ...\n","763    10   101    76    48   180  32.9  0.171   63  tested_negative\n","764     2   122    70    27     0  36.8  0.340   27  tested_negative\n","765     5   121    72    23   112  26.2  0.245   30  tested_negative\n","766     1   126    60     0     0  30.1  0.349   47  tested_positive\n","767     1    93    70    31     0  30.4  0.315   23  tested_negative\n","\n","[768 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-6eb1020b-3d43-4c66-ae66-40c2f6f4d159\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>preg</th>\n","      <th>plas</th>\n","      <th>pres</th>\n","      <th>skin</th>\n","      <th>insu</th>\n","      <th>mass</th>\n","      <th>pedi</th>\n","      <th>age</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6</td>\n","      <td>148</td>\n","      <td>72</td>\n","      <td>35</td>\n","      <td>0</td>\n","      <td>33.6</td>\n","      <td>0.627</td>\n","      <td>50</td>\n","      <td>tested_positive</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>85</td>\n","      <td>66</td>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>26.6</td>\n","      <td>0.351</td>\n","      <td>31</td>\n","      <td>tested_negative</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8</td>\n","      <td>183</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>23.3</td>\n","      <td>0.672</td>\n","      <td>32</td>\n","      <td>tested_positive</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>89</td>\n","      <td>66</td>\n","      <td>23</td>\n","      <td>94</td>\n","      <td>28.1</td>\n","      <td>0.167</td>\n","      <td>21</td>\n","      <td>tested_negative</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>137</td>\n","      <td>40</td>\n","      <td>35</td>\n","      <td>168</td>\n","      <td>43.1</td>\n","      <td>2.288</td>\n","      <td>33</td>\n","      <td>tested_positive</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>763</th>\n","      <td>10</td>\n","      <td>101</td>\n","      <td>76</td>\n","      <td>48</td>\n","      <td>180</td>\n","      <td>32.9</td>\n","      <td>0.171</td>\n","      <td>63</td>\n","      <td>tested_negative</td>\n","    </tr>\n","    <tr>\n","      <th>764</th>\n","      <td>2</td>\n","      <td>122</td>\n","      <td>70</td>\n","      <td>27</td>\n","      <td>0</td>\n","      <td>36.8</td>\n","      <td>0.340</td>\n","      <td>27</td>\n","      <td>tested_negative</td>\n","    </tr>\n","    <tr>\n","      <th>765</th>\n","      <td>5</td>\n","      <td>121</td>\n","      <td>72</td>\n","      <td>23</td>\n","      <td>112</td>\n","      <td>26.2</td>\n","      <td>0.245</td>\n","      <td>30</td>\n","      <td>tested_negative</td>\n","    </tr>\n","    <tr>\n","      <th>766</th>\n","      <td>1</td>\n","      <td>126</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30.1</td>\n","      <td>0.349</td>\n","      <td>47</td>\n","      <td>tested_positive</td>\n","    </tr>\n","    <tr>\n","      <th>767</th>\n","      <td>1</td>\n","      <td>93</td>\n","      <td>70</td>\n","      <td>31</td>\n","      <td>0</td>\n","      <td>30.4</td>\n","      <td>0.315</td>\n","      <td>23</td>\n","      <td>tested_negative</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>768 rows Ã— 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6eb1020b-3d43-4c66-ae66-40c2f6f4d159')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6eb1020b-3d43-4c66-ae66-40c2f6f4d159 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6eb1020b-3d43-4c66-ae66-40c2f6f4d159');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4719209b-8319-4eab-b0a5-ea07eaf34588\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4719209b-8319-4eab-b0a5-ea07eaf34588')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4719209b-8319-4eab-b0a5-ea07eaf34588 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_3d532eb6-145c-469e-bb6f-f2acbc9e0d53\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dia')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3d532eb6-145c-469e-bb6f-f2acbc9e0d53 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dia');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dia","summary":"{\n  \"name\": \"dia\",\n  \"rows\": 768,\n  \"fields\": [\n    {\n      \"column\": \"preg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 0,\n        \"max\": 17,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          6,\n          1,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"plas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31,\n        \"min\": 0,\n        \"max\": 199,\n        \"num_unique_values\": 136,\n        \"samples\": [\n          151,\n          101,\n          112\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pres\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19,\n        \"min\": 0,\n        \"max\": 122,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          86,\n          46,\n          85\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"skin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 0,\n        \"max\": 99,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          7,\n          12,\n          48\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"insu\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 115,\n        \"min\": 0,\n        \"max\": 846,\n        \"num_unique_values\": 186,\n        \"samples\": [\n          52,\n          41,\n          183\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.884160320375446,\n        \"min\": 0.0,\n        \"max\": 67.1,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          19.9,\n          31.0,\n          38.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pedi\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3313285950127749,\n        \"min\": 0.078,\n        \"max\": 2.42,\n        \"num_unique_values\": 517,\n        \"samples\": [\n          1.731,\n          0.426,\n          0.138\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 21,\n        \"max\": 81,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          60,\n          47,\n          72\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"class\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"tested_negative\",\n          \"tested_positive\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["dia=pd.read_csv(\"/content/diabetcsv (1).csv\")\n","print(dia.shape)\n","print(dia.shape[0])\n","print(dia.shape[1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xclhik2TQDnf","executionInfo":{"status":"ok","timestamp":1708931583743,"user_tz":-330,"elapsed":527,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"562db5aa-cd04-47e8-b86f-7ab295abb125"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(768, 9)\n","768\n","9\n"]}]},{"cell_type":"code","source":["grad=pd.read_csv(\"/content/demodt.txt\" ,sep=\",\")\n","grad"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":864},"id":"xLeCMHG13YhO","executionInfo":{"status":"ok","timestamp":1708926514321,"user_tz":-330,"elapsed":450,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"3b577994-96da-4e5a-c405-f4d0a1512fd6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   State  Literacy  Cleanliness  Crime_Rate  Good\n","0      A        92           90          54     0\n","1      B        56           67          50     1\n","2      C        78           85          62     0\n","3      D        63           72          48     1\n","4      E        85           79          55     0\n","5      F        71           68          58     0\n","6      G        80           83          51     0\n","7      H        67           74          47     1\n","8      I        89           88          53     0\n","9      J        58           65          49     1\n","10     K        82           81          60     0\n","11     L        75           78          57     0\n","12     M        69           70          46     1\n","13     N        87           86          52     0\n","14     O        61           63          45     1\n","15     P        93           91          56     0\n","16     Q        55           66          61     0\n","17     R        76           77          59     0\n","18     S        84           82          44     1\n","19     T        70           69          50     1\n","20     U        94           92          57     0\n","21     V        59           64          52     0\n","22     W        83           80          43     1\n","23     X        74           76          63     0\n","24     Y        68           73          41     1\n","25     Z        88           84          47     1"],"text/html":["\n","  <div id=\"df-5b67a2e7-07c8-4d15-b445-944ee52a6cac\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>State</th>\n","      <th>Literacy</th>\n","      <th>Cleanliness</th>\n","      <th>Crime_Rate</th>\n","      <th>Good</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>A</td>\n","      <td>92</td>\n","      <td>90</td>\n","      <td>54</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>B</td>\n","      <td>56</td>\n","      <td>67</td>\n","      <td>50</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>C</td>\n","      <td>78</td>\n","      <td>85</td>\n","      <td>62</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>D</td>\n","      <td>63</td>\n","      <td>72</td>\n","      <td>48</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>E</td>\n","      <td>85</td>\n","      <td>79</td>\n","      <td>55</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>F</td>\n","      <td>71</td>\n","      <td>68</td>\n","      <td>58</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>G</td>\n","      <td>80</td>\n","      <td>83</td>\n","      <td>51</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>H</td>\n","      <td>67</td>\n","      <td>74</td>\n","      <td>47</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>I</td>\n","      <td>89</td>\n","      <td>88</td>\n","      <td>53</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>J</td>\n","      <td>58</td>\n","      <td>65</td>\n","      <td>49</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>K</td>\n","      <td>82</td>\n","      <td>81</td>\n","      <td>60</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>L</td>\n","      <td>75</td>\n","      <td>78</td>\n","      <td>57</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>M</td>\n","      <td>69</td>\n","      <td>70</td>\n","      <td>46</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>N</td>\n","      <td>87</td>\n","      <td>86</td>\n","      <td>52</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>O</td>\n","      <td>61</td>\n","      <td>63</td>\n","      <td>45</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>P</td>\n","      <td>93</td>\n","      <td>91</td>\n","      <td>56</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Q</td>\n","      <td>55</td>\n","      <td>66</td>\n","      <td>61</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>R</td>\n","      <td>76</td>\n","      <td>77</td>\n","      <td>59</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>S</td>\n","      <td>84</td>\n","      <td>82</td>\n","      <td>44</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>T</td>\n","      <td>70</td>\n","      <td>69</td>\n","      <td>50</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>U</td>\n","      <td>94</td>\n","      <td>92</td>\n","      <td>57</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>V</td>\n","      <td>59</td>\n","      <td>64</td>\n","      <td>52</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>W</td>\n","      <td>83</td>\n","      <td>80</td>\n","      <td>43</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>X</td>\n","      <td>74</td>\n","      <td>76</td>\n","      <td>63</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>Y</td>\n","      <td>68</td>\n","      <td>73</td>\n","      <td>41</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>Z</td>\n","      <td>88</td>\n","      <td>84</td>\n","      <td>47</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5b67a2e7-07c8-4d15-b445-944ee52a6cac')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5b67a2e7-07c8-4d15-b445-944ee52a6cac button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5b67a2e7-07c8-4d15-b445-944ee52a6cac');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6d94494d-7152-4a4a-952b-4b9ce1ef164a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6d94494d-7152-4a4a-952b-4b9ce1ef164a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6d94494d-7152-4a4a-952b-4b9ce1ef164a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_20eac76e-aabb-474a-8c37-f849b57ff23e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('grad')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_20eac76e-aabb-474a-8c37-f849b57ff23e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('grad');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"grad","summary":"{\n  \"name\": \"grad\",\n  \"rows\": 26,\n  \"fields\": [\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 26,\n        \"samples\": [\n          \"I\",\n          \"Q\",\n          \"A\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Literacy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 55,\n        \"max\": 94,\n        \"num_unique_values\": 26,\n        \"samples\": [\n          89,\n          55,\n          92\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cleanliness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 63,\n        \"max\": 92,\n        \"num_unique_values\": 26,\n        \"samples\": [\n          88,\n          66,\n          90\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Crime_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6,\n        \"min\": 41,\n        \"max\": 63,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          54,\n          52,\n          53\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Good\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["dial=pd.read_excel(\"/content/diabetes (1).xlsx\")\n","dial"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"55FauHhg530Q","executionInfo":{"status":"ok","timestamp":1708926412108,"user_tz":-330,"elapsed":405,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"b49a76be-ae75-45d0-df75-17edb0d218d8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     preg  plas  pres  skin  insu  mass   pedi  age            class\n","0       6   148    72    35     0  33.6  0.627   50  tested_positive\n","1       1    85    66    29     0  26.6  0.351   31  tested_negative\n","2       8   183    64     0     0  23.3  0.672   32  tested_positive\n","3       1    89    66    23    94  28.1  0.167   21  tested_negative\n","4       0   137    40    35   168  43.1  2.288   33  tested_positive\n","..    ...   ...   ...   ...   ...   ...    ...  ...              ...\n","763    10   101    76    48   180  32.9  0.171   63  tested_negative\n","764     2   122    70    27     0  36.8  0.340   27  tested_negative\n","765     5   121    72    23   112  26.2  0.245   30  tested_negative\n","766     1   126    60     0     0  30.1  0.349   47  tested_positive\n","767     1    93    70    31     0  30.4  0.315   23  tested_negative\n","\n","[768 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-93ab8e39-4d82-4654-bfe7-0aa6e9170a68\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>preg</th>\n","      <th>plas</th>\n","      <th>pres</th>\n","      <th>skin</th>\n","      <th>insu</th>\n","      <th>mass</th>\n","      <th>pedi</th>\n","      <th>age</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6</td>\n","      <td>148</td>\n","      <td>72</td>\n","      <td>35</td>\n","      <td>0</td>\n","      <td>33.6</td>\n","      <td>0.627</td>\n","      <td>50</td>\n","      <td>tested_positive</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>85</td>\n","      <td>66</td>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>26.6</td>\n","      <td>0.351</td>\n","      <td>31</td>\n","      <td>tested_negative</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8</td>\n","      <td>183</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>23.3</td>\n","      <td>0.672</td>\n","      <td>32</td>\n","      <td>tested_positive</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>89</td>\n","      <td>66</td>\n","      <td>23</td>\n","      <td>94</td>\n","      <td>28.1</td>\n","      <td>0.167</td>\n","      <td>21</td>\n","      <td>tested_negative</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>137</td>\n","      <td>40</td>\n","      <td>35</td>\n","      <td>168</td>\n","      <td>43.1</td>\n","      <td>2.288</td>\n","      <td>33</td>\n","      <td>tested_positive</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>763</th>\n","      <td>10</td>\n","      <td>101</td>\n","      <td>76</td>\n","      <td>48</td>\n","      <td>180</td>\n","      <td>32.9</td>\n","      <td>0.171</td>\n","      <td>63</td>\n","      <td>tested_negative</td>\n","    </tr>\n","    <tr>\n","      <th>764</th>\n","      <td>2</td>\n","      <td>122</td>\n","      <td>70</td>\n","      <td>27</td>\n","      <td>0</td>\n","      <td>36.8</td>\n","      <td>0.340</td>\n","      <td>27</td>\n","      <td>tested_negative</td>\n","    </tr>\n","    <tr>\n","      <th>765</th>\n","      <td>5</td>\n","      <td>121</td>\n","      <td>72</td>\n","      <td>23</td>\n","      <td>112</td>\n","      <td>26.2</td>\n","      <td>0.245</td>\n","      <td>30</td>\n","      <td>tested_negative</td>\n","    </tr>\n","    <tr>\n","      <th>766</th>\n","      <td>1</td>\n","      <td>126</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30.1</td>\n","      <td>0.349</td>\n","      <td>47</td>\n","      <td>tested_positive</td>\n","    </tr>\n","    <tr>\n","      <th>767</th>\n","      <td>1</td>\n","      <td>93</td>\n","      <td>70</td>\n","      <td>31</td>\n","      <td>0</td>\n","      <td>30.4</td>\n","      <td>0.315</td>\n","      <td>23</td>\n","      <td>tested_negative</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>768 rows Ã— 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-93ab8e39-4d82-4654-bfe7-0aa6e9170a68')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-93ab8e39-4d82-4654-bfe7-0aa6e9170a68 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-93ab8e39-4d82-4654-bfe7-0aa6e9170a68');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e7c14fab-fa01-4558-b3e2-7e2575790021\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e7c14fab-fa01-4558-b3e2-7e2575790021')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e7c14fab-fa01-4558-b3e2-7e2575790021 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d29430e4-e479-4060-a2cd-d9acb206131b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dial')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d29430e4-e479-4060-a2cd-d9acb206131b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dial');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dial","summary":"{\n  \"name\": \"dial\",\n  \"rows\": 768,\n  \"fields\": [\n    {\n      \"column\": \"preg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 0,\n        \"max\": 17,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          6,\n          1,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"plas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31,\n        \"min\": 0,\n        \"max\": 199,\n        \"num_unique_values\": 136,\n        \"samples\": [\n          151,\n          101,\n          112\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pres\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19,\n        \"min\": 0,\n        \"max\": 122,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          86,\n          46,\n          85\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"skin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 0,\n        \"max\": 99,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          7,\n          12,\n          48\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"insu\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 115,\n        \"min\": 0,\n        \"max\": 846,\n        \"num_unique_values\": 186,\n        \"samples\": [\n          52,\n          41,\n          183\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.884160320375446,\n        \"min\": 0.0,\n        \"max\": 67.1,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          19.9,\n          31.0,\n          38.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pedi\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3313285950127749,\n        \"min\": 0.078,\n        \"max\": 2.42,\n        \"num_unique_values\": 517,\n        \"samples\": [\n          1.731,\n          0.426,\n          0.138\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 21,\n        \"max\": 81,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          60,\n          47,\n          72\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"class\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"tested_negative\",\n          \"tested_positive\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["diaexl=pd.read_excel(\"/content/diabetes (1).xlsx\",sheet_name=\"dora\")\n","diaexl"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"msCM7H-36Ffc","executionInfo":{"status":"ok","timestamp":1708926302625,"user_tz":-330,"elapsed":472,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"4223976c-e6c7-431d-8134-f022e768bed8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Dead Alive\n","0  yes    no\n","1  yes    no\n","2  yes    no\n","3  yes    no\n","4  yes    no"],"text/html":["\n","  <div id=\"df-9eaf25ee-a785-4900-ae5c-f473cb0d1efc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Dead</th>\n","      <th>Alive</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>yes</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>yes</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>yes</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>yes</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>yes</td>\n","      <td>no</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9eaf25ee-a785-4900-ae5c-f473cb0d1efc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9eaf25ee-a785-4900-ae5c-f473cb0d1efc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9eaf25ee-a785-4900-ae5c-f473cb0d1efc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-63dec407-d90d-41d0-9407-1569bc2f3b9d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-63dec407-d90d-41d0-9407-1569bc2f3b9d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-63dec407-d90d-41d0-9407-1569bc2f3b9d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b2b7350e-74b7-40a5-ab7d-a87d1ee02e35\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('diaexl')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b2b7350e-74b7-40a5-ab7d-a87d1ee02e35 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('diaexl');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"diaexl","summary":"{\n  \"name\": \"diaexl\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Dead\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Alive\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"no\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["dial.describe() #describing a dataframe"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"cpetu7SD8TbB","executionInfo":{"status":"ok","timestamp":1708926443805,"user_tz":-330,"elapsed":393,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"079ddb4c-3912-48bd-a621-822240a22926"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             preg        plas        pres        skin        insu        mass  \\\n","count  768.000000  768.000000  768.000000  768.000000  768.000000  768.000000   \n","mean     3.845052  120.894531   69.105469   20.536458   79.799479   31.992578   \n","std      3.369578   31.972618   19.355807   15.952218  115.244002    7.884160   \n","min      0.000000    0.000000    0.000000    0.000000    0.000000    0.000000   \n","25%      1.000000   99.000000   62.000000    0.000000    0.000000   27.300000   \n","50%      3.000000  117.000000   72.000000   23.000000   30.500000   32.000000   \n","75%      6.000000  140.250000   80.000000   32.000000  127.250000   36.600000   \n","max     17.000000  199.000000  122.000000   99.000000  846.000000   67.100000   \n","\n","             pedi         age  \n","count  768.000000  768.000000  \n","mean     0.471876   33.240885  \n","std      0.331329   11.760232  \n","min      0.078000   21.000000  \n","25%      0.243750   24.000000  \n","50%      0.372500   29.000000  \n","75%      0.626250   41.000000  \n","max      2.420000   81.000000  "],"text/html":["\n","  <div id=\"df-2f24fc0d-9999-4b33-9a89-05c82395ad8f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>preg</th>\n","      <th>plas</th>\n","      <th>pres</th>\n","      <th>skin</th>\n","      <th>insu</th>\n","      <th>mass</th>\n","      <th>pedi</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>3.845052</td>\n","      <td>120.894531</td>\n","      <td>69.105469</td>\n","      <td>20.536458</td>\n","      <td>79.799479</td>\n","      <td>31.992578</td>\n","      <td>0.471876</td>\n","      <td>33.240885</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>3.369578</td>\n","      <td>31.972618</td>\n","      <td>19.355807</td>\n","      <td>15.952218</td>\n","      <td>115.244002</td>\n","      <td>7.884160</td>\n","      <td>0.331329</td>\n","      <td>11.760232</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.078000</td>\n","      <td>21.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.000000</td>\n","      <td>99.000000</td>\n","      <td>62.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>27.300000</td>\n","      <td>0.243750</td>\n","      <td>24.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>3.000000</td>\n","      <td>117.000000</td>\n","      <td>72.000000</td>\n","      <td>23.000000</td>\n","      <td>30.500000</td>\n","      <td>32.000000</td>\n","      <td>0.372500</td>\n","      <td>29.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>6.000000</td>\n","      <td>140.250000</td>\n","      <td>80.000000</td>\n","      <td>32.000000</td>\n","      <td>127.250000</td>\n","      <td>36.600000</td>\n","      <td>0.626250</td>\n","      <td>41.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>17.000000</td>\n","      <td>199.000000</td>\n","      <td>122.000000</td>\n","      <td>99.000000</td>\n","      <td>846.000000</td>\n","      <td>67.100000</td>\n","      <td>2.420000</td>\n","      <td>81.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2f24fc0d-9999-4b33-9a89-05c82395ad8f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2f24fc0d-9999-4b33-9a89-05c82395ad8f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2f24fc0d-9999-4b33-9a89-05c82395ad8f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bece169e-df50-45f8-92ca-fe58884fb606\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bece169e-df50-45f8-92ca-fe58884fb606')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bece169e-df50-45f8-92ca-fe58884fb606 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"dial\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"preg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 269.85223453356366,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.8450520833333335,\n          3.0,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"plas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 243.73802348295857,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          120.89453125,\n          117.0,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pres\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 252.8525053581062,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          69.10546875,\n          72.0,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"skin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 263.7684730531098,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          768.0,\n          20.536458333333332,\n          32.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"insu\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 350.26059167945886,\n        \"min\": 0.0,\n        \"max\": 846.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          768.0,\n          79.79947916666667,\n          127.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 262.05117817552093,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          31.992578124999998,\n          32.0,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pedi\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 271.3005221658502,\n        \"min\": 0.078,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.47187630208333325,\n          0.3725,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 260.1941178528413,\n        \"min\": 11.760231540678685,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          33.240885416666664,\n          29.0,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["grad.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"VxAT1RVk9EvJ","executionInfo":{"status":"ok","timestamp":1708926518761,"user_tz":-330,"elapsed":450,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"489d149e-6116-4356-a54b-d71b77793991"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Literacy  Cleanliness  Crime_Rate       Good\n","count  26.000000    26.000000   26.000000  26.000000\n","mean   75.269231    77.038462   52.307692   0.423077\n","std    12.078270     8.879103    6.208183   0.503831\n","min    55.000000    63.000000   41.000000   0.000000\n","25%    67.250000    69.250000   47.250000   0.000000\n","50%    75.500000    77.500000   52.000000   0.000000\n","75%    84.750000    83.750000   57.000000   1.000000\n","max    94.000000    92.000000   63.000000   1.000000"],"text/html":["\n","  <div id=\"df-0d2fb006-af31-465f-a417-4e7818049644\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Literacy</th>\n","      <th>Cleanliness</th>\n","      <th>Crime_Rate</th>\n","      <th>Good</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>26.000000</td>\n","      <td>26.000000</td>\n","      <td>26.000000</td>\n","      <td>26.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>75.269231</td>\n","      <td>77.038462</td>\n","      <td>52.307692</td>\n","      <td>0.423077</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>12.078270</td>\n","      <td>8.879103</td>\n","      <td>6.208183</td>\n","      <td>0.503831</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>55.000000</td>\n","      <td>63.000000</td>\n","      <td>41.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>67.250000</td>\n","      <td>69.250000</td>\n","      <td>47.250000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>75.500000</td>\n","      <td>77.500000</td>\n","      <td>52.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>84.750000</td>\n","      <td>83.750000</td>\n","      <td>57.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>94.000000</td>\n","      <td>92.000000</td>\n","      <td>63.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0d2fb006-af31-465f-a417-4e7818049644')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0d2fb006-af31-465f-a417-4e7818049644 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0d2fb006-af31-465f-a417-4e7818049644');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e5f9f8ce-126c-4c2c-9ca5-731a2ed2d2b3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e5f9f8ce-126c-4c2c-9ca5-731a2ed2d2b3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e5f9f8ce-126c-4c2c-9ca5-731a2ed2d2b3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"grad\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Literacy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.68522496275273,\n        \"min\": 12.078270380506282,\n        \"max\": 94.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          75.26923076923077,\n          75.5,\n          26.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cleanliness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29.302873795378815,\n        \"min\": 8.879102518749377,\n        \"max\": 92.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          77.03846153846153,\n          77.5,\n          26.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Crime_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.625098657328152,\n        \"min\": 6.2081831852433655,\n        \"max\": 63.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          52.30769230769231,\n          52.0,\n          26.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Good\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.054099991263357,\n        \"min\": 0.0,\n        \"max\": 26.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.4230769230769231,\n          1.0,\n          0.5038314736557788\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["print(df.isnull())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0BYJ8ChU-fE0","executionInfo":{"status":"ok","timestamp":1708926850119,"user_tz":-330,"elapsed":9,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"7bf3e2b5-858d-4f8f-98ee-827fe37309d7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    Names  Initials   SEM1   SEM2   SEM3  Grade  Placed\n","0   False     False  False  False  False  False   False\n","1   False     False  False  False  False  False   False\n","2   False     False  False  False  False  False   False\n","3   False     False  False  False   True  False   False\n","4   False     False  False  False  False  False   False\n","5   False     False  False  False  False  False   False\n","6   False     False  False  False  False  False   False\n","7   False     False  False  False  False  False   False\n","8   False     False   True  False  False  False   False\n","9   False     False   True  False  False  False   False\n","10  False     False   True  False  False  False   False\n","11  False     False  False  False  False  False   False\n","12  False     False  False  False  False  False   False\n","13  False     False  False  False  False  False   False\n","14  False     False  False  False  False  False   False\n","15  False     False  False  False  False  False   False\n","16  False     False  False  False  False  False   False\n"]}]},{"cell_type":"code","source":["print(df.isnull().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3bv5G9It-_9i","executionInfo":{"status":"ok","timestamp":1708926984148,"user_tz":-330,"elapsed":1080,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"9c7f0951-5485-4234-8844-2ef55ef3e36a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Names       0\n","Initials    0\n","SEM1        3\n","SEM2        0\n","SEM3        1\n","Grade       0\n","Placed      0\n","dtype: int64\n"]}]},{"cell_type":"code","source":["df.dropna()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":457},"id":"WSfwt2XP_nC2","executionInfo":{"status":"ok","timestamp":1708927170846,"user_tz":-330,"elapsed":839,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"50595139-6964-4b77-a872-1189c0dc16f9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Names Initials  SEM1  SEM2  SEM3 Grade  Placed\n","0      Joe        K   9.8  10.0   9.9    A+       1\n","1   Rajesh        M   8.9   9.1   9.3     A       1\n","2   Kissan        V   9.9   9.8  10.0     A       0\n","4     Jeen        K   9.8   9.1   9.9    A+       1\n","5      Raj        M   8.9   9.1   9.3     A       1\n","6   Hassan        V   9.9   9.0   9.2     A       1\n","7     Mari        N   7.7   8.0   7.1     B       1\n","11    Maya        N   7.7   8.0   7.1     B       0\n","12   Jolin        K   9.8   9.1   9.9    A+       1\n","13  Rajesh        M   8.9   9.1   9.3     A       1\n","14    Riya        M   9.3   9.9  10.0     A       1\n","15    Sana        V   9.9   9.3   9.2     A       0\n","16    Mark        N   7.7   8.0   7.0     B       0"],"text/html":["\n","  <div id=\"df-dc5b0b57-b525-464d-a7a2-5e833fe9f149\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Joe</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kissan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jeen</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Raj</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Hassan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.0</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Mari</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Maya</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Jolin</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Riya</td>\n","      <td>M</td>\n","      <td>9.3</td>\n","      <td>9.9</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Sana</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Mark</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dc5b0b57-b525-464d-a7a2-5e833fe9f149')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dc5b0b57-b525-464d-a7a2-5e833fe9f149 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dc5b0b57-b525-464d-a7a2-5e833fe9f149');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9012d1a1-bef6-42ca-97b4-bccdf3faa160\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9012d1a1-bef6-42ca-97b4-bccdf3faa160')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9012d1a1-bef6-42ca-97b4-bccdf3faa160 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 13,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"Sana\",\n          \"Riya\",\n          \"Joe\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"M\",\n          \"N\",\n          \"K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8864362530770225,\n        \"min\": 7.7,\n        \"max\": 9.9,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          8.9,\n          9.3,\n          9.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6813448240287509,\n        \"min\": 8.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10.0,\n          9.1,\n          9.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1545895041428895,\n        \"min\": 7.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          9.9,\n          9.3,\n          7.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A+\",\n          \"A\",\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["df=pd.read_csv(\"/content/grades_withnulls.csv\")\n","df.dropna()\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":582},"id":"Vc0TwLRm9Wkw","executionInfo":{"status":"ok","timestamp":1708927760554,"user_tz":-330,"elapsed":11,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"4fe8acb2-04ac-4e8b-cf80-d10a8418972a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Names Initials  SEM1  SEM2  SEM3 Grade  Placed\n","0      Joe        K   9.8  10.0   9.9    A+       1\n","1   Rajesh        M   8.9   9.1   9.3     A       1\n","2   Kissan        V   9.9   9.8  10.0     A       0\n","3     Mary        N   7.7   8.0   NaN     B       0\n","4     Jeen        K   9.8   9.1   9.9    A+       1\n","5      Raj        M   8.9   9.1   9.3     A       1\n","6   Hassan        V   9.9   9.0   9.2     A       1\n","7     Mari        N   7.7   8.0   7.1     B       1\n","8     Jess        K   NaN   9.1   9.9    A+       1\n","9   Rajini        M   NaN   9.1   9.3     A       0\n","10   Kiran        V   NaN   9.3   9.2     A       0\n","11    Maya        N   7.7   8.0   7.1     B       0\n","12   Jolin        K   9.8   9.1   9.9    A+       1\n","13  Rajesh        M   8.9   9.1   9.3     A       1\n","14    Riya        M   9.3   9.9  10.0     A       1\n","15    Sana        V   9.9   9.3   9.2     A       0\n","16    Mark        N   7.7   8.0   7.0     B       0"],"text/html":["\n","  <div id=\"df-654fdd07-fcdb-4d65-bd35-5bfa08653913\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Joe</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kissan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Mary</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>NaN</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jeen</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Raj</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Hassan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.0</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Mari</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Jess</td>\n","      <td>K</td>\n","      <td>NaN</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Rajini</td>\n","      <td>M</td>\n","      <td>NaN</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Kiran</td>\n","      <td>V</td>\n","      <td>NaN</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Maya</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Jolin</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Riya</td>\n","      <td>M</td>\n","      <td>9.3</td>\n","      <td>9.9</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Sana</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Mark</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-654fdd07-fcdb-4d65-bd35-5bfa08653913')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-654fdd07-fcdb-4d65-bd35-5bfa08653913 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-654fdd07-fcdb-4d65-bd35-5bfa08653913');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b02918d1-2c06-4892-87de-9abac4b3c2a1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b02918d1-2c06-4892-87de-9abac4b3c2a1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b02918d1-2c06-4892-87de-9abac4b3c2a1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_ca6f749f-67de-4d4a-9354-6a1715d60c97\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ca6f749f-67de-4d4a-9354-6a1715d60c97 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 17,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Joe\",\n          \"Rajesh\",\n          \"Raj\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"M\",\n          \"N\",\n          \"K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9294036845156195,\n        \"min\": 7.7,\n        \"max\": 9.9,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          8.9,\n          9.3,\n          9.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6471089552772393,\n        \"min\": 8.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10.0,\n          9.1,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0576703960434304,\n        \"min\": 7.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          9.9,\n          9.3,\n          7.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A+\",\n          \"A\",\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["df1=pd.read_csv(\"/content/grades_withnulls.csv\")\n","df1.dropna(inplace=True)\n","df1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":457},"id":"bNHzLqvmCFR4","executionInfo":{"status":"ok","timestamp":1708927812104,"user_tz":-330,"elapsed":659,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"ea7d247a-a715-4efd-8b60-ad0482aeddc1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Names Initials  SEM1  SEM2  SEM3 Grade  Placed\n","0      Joe        K   9.8  10.0   9.9    A+       1\n","1   Rajesh        M   8.9   9.1   9.3     A       1\n","2   Kissan        V   9.9   9.8  10.0     A       0\n","4     Jeen        K   9.8   9.1   9.9    A+       1\n","5      Raj        M   8.9   9.1   9.3     A       1\n","6   Hassan        V   9.9   9.0   9.2     A       1\n","7     Mari        N   7.7   8.0   7.1     B       1\n","11    Maya        N   7.7   8.0   7.1     B       0\n","12   Jolin        K   9.8   9.1   9.9    A+       1\n","13  Rajesh        M   8.9   9.1   9.3     A       1\n","14    Riya        M   9.3   9.9  10.0     A       1\n","15    Sana        V   9.9   9.3   9.2     A       0\n","16    Mark        N   7.7   8.0   7.0     B       0"],"text/html":["\n","  <div id=\"df-a4bbd442-02d8-425e-98e6-de5ef35b96b0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Joe</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kissan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jeen</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Raj</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Hassan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.0</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Mari</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Maya</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Jolin</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Riya</td>\n","      <td>M</td>\n","      <td>9.3</td>\n","      <td>9.9</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Sana</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Mark</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a4bbd442-02d8-425e-98e6-de5ef35b96b0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a4bbd442-02d8-425e-98e6-de5ef35b96b0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a4bbd442-02d8-425e-98e6-de5ef35b96b0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-88a110e6-d723-4eee-a6c8-9126f3ed7766\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-88a110e6-d723-4eee-a6c8-9126f3ed7766')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-88a110e6-d723-4eee-a6c8-9126f3ed7766 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_42830e2c-4039-4cb0-8ee1-98908ebfa25c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df1')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_42830e2c-4039-4cb0-8ee1-98908ebfa25c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df1');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df1","summary":"{\n  \"name\": \"df1\",\n  \"rows\": 13,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"Sana\",\n          \"Riya\",\n          \"Joe\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"M\",\n          \"N\",\n          \"K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8864362530770225,\n        \"min\": 7.7,\n        \"max\": 9.9,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          8.9,\n          9.3,\n          9.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6813448240287509,\n        \"min\": 8.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10.0,\n          9.1,\n          9.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1545895041428895,\n        \"min\": 7.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          9.9,\n          9.3,\n          7.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A+\",\n          \"A\",\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["df2=pd.read_csv(\"/content/grades_withnulls.csv\")\n","mdf=df2.dropna()\n","mdf\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":457},"id":"ixOWhELICT4q","executionInfo":{"status":"ok","timestamp":1708927897255,"user_tz":-330,"elapsed":662,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"cd30d382-91f7-429f-a961-d6910b34ecdd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Names Initials  SEM1  SEM2  SEM3 Grade  Placed\n","0      Joe        K   9.8  10.0   9.9    A+       1\n","1   Rajesh        M   8.9   9.1   9.3     A       1\n","2   Kissan        V   9.9   9.8  10.0     A       0\n","4     Jeen        K   9.8   9.1   9.9    A+       1\n","5      Raj        M   8.9   9.1   9.3     A       1\n","6   Hassan        V   9.9   9.0   9.2     A       1\n","7     Mari        N   7.7   8.0   7.1     B       1\n","11    Maya        N   7.7   8.0   7.1     B       0\n","12   Jolin        K   9.8   9.1   9.9    A+       1\n","13  Rajesh        M   8.9   9.1   9.3     A       1\n","14    Riya        M   9.3   9.9  10.0     A       1\n","15    Sana        V   9.9   9.3   9.2     A       0\n","16    Mark        N   7.7   8.0   7.0     B       0"],"text/html":["\n","  <div id=\"df-40db92ab-a24b-489e-a269-d1c0a09da6d0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Joe</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kissan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jeen</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Raj</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Hassan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.0</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Mari</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Maya</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Jolin</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Riya</td>\n","      <td>M</td>\n","      <td>9.3</td>\n","      <td>9.9</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Sana</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Mark</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-40db92ab-a24b-489e-a269-d1c0a09da6d0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-40db92ab-a24b-489e-a269-d1c0a09da6d0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-40db92ab-a24b-489e-a269-d1c0a09da6d0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-60d27569-e748-4e33-9f4c-b232fc86b6c9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-60d27569-e748-4e33-9f4c-b232fc86b6c9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-60d27569-e748-4e33-9f4c-b232fc86b6c9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_85f49524-4bc6-4c7f-b83c-d05271180142\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('mdf')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_85f49524-4bc6-4c7f-b83c-d05271180142 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('mdf');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"mdf","summary":"{\n  \"name\": \"mdf\",\n  \"rows\": 13,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"Sana\",\n          \"Riya\",\n          \"Joe\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"M\",\n          \"N\",\n          \"K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8864362530770225,\n        \"min\": 7.7,\n        \"max\": 9.9,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          8.9,\n          9.3,\n          9.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6813448240287509,\n        \"min\": 8.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10.0,\n          9.1,\n          9.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1545895041428895,\n        \"min\": 7.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          9.9,\n          9.3,\n          7.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A+\",\n          \"A\",\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["df.dropna()\n","df\n","#to save the chanes create a new data frame"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":582},"id":"FHi_09nvAGic","executionInfo":{"status":"ok","timestamp":1708927566318,"user_tz":-330,"elapsed":524,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"f03d320e-90dc-4ce0-9ef3-3c924a2080a5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Names Initials  SEM1  SEM2  SEM3 Grade  Placed\n","0      Joe        K   9.8  10.0   9.9    A+       1\n","1   Rajesh        M   8.9   9.1   9.3     A       1\n","2   Kissan        V   9.9   9.8  10.0     A       0\n","3     Mary        N   7.7   8.0   NaN     B       0\n","4     Jeen        K   9.8   9.1   9.9    A+       1\n","5      Raj        M   8.9   9.1   9.3     A       1\n","6   Hassan        V   9.9   9.0   9.2     A       1\n","7     Mari        N   7.7   8.0   7.1     B       1\n","8     Jess        K   NaN   9.1   9.9    A+       1\n","9   Rajini        M   NaN   9.1   9.3     A       0\n","10   Kiran        V   NaN   9.3   9.2     A       0\n","11    Maya        N   7.7   8.0   7.1     B       0\n","12   Jolin        K   9.8   9.1   9.9    A+       1\n","13  Rajesh        M   8.9   9.1   9.3     A       1\n","14    Riya        M   9.3   9.9  10.0     A       1\n","15    Sana        V   9.9   9.3   9.2     A       0\n","16    Mark        N   7.7   8.0   7.0     B       0"],"text/html":["\n","  <div id=\"df-bf2882e9-3c47-4332-98fb-4b725373cece\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Joe</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kissan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Mary</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>NaN</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jeen</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Raj</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Hassan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.0</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Mari</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Jess</td>\n","      <td>K</td>\n","      <td>NaN</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Rajini</td>\n","      <td>M</td>\n","      <td>NaN</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Kiran</td>\n","      <td>V</td>\n","      <td>NaN</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Maya</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Jolin</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Riya</td>\n","      <td>M</td>\n","      <td>9.3</td>\n","      <td>9.9</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Sana</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Mark</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bf2882e9-3c47-4332-98fb-4b725373cece')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bf2882e9-3c47-4332-98fb-4b725373cece button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bf2882e9-3c47-4332-98fb-4b725373cece');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3731c7a8-e0ba-4530-9abf-6a97b895cd06\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3731c7a8-e0ba-4530-9abf-6a97b895cd06')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3731c7a8-e0ba-4530-9abf-6a97b895cd06 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b436edf0-f6b6-4fcd-b44f-4f707c29616e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b436edf0-f6b6-4fcd-b44f-4f707c29616e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 17,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Joe\",\n          \"Rajesh\",\n          \"Raj\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"M\",\n          \"N\",\n          \"K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9294036845156195,\n        \"min\": 7.7,\n        \"max\": 9.9,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          8.9,\n          9.3,\n          9.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6471089552772393,\n        \"min\": 8.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10.0,\n          9.1,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0576703960434304,\n        \"min\": 7.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          9.9,\n          9.3,\n          7.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A+\",\n          \"A\",\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":582},"id":"Dvl5XXfFARA2","executionInfo":{"status":"ok","timestamp":1708927573886,"user_tz":-330,"elapsed":540,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"fd827ea4-a1b3-489f-8999-bd3f99780fb1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Names Initials  SEM1  SEM2  SEM3 Grade  Placed\n","0      Joe        K   9.8  10.0   9.9    A+       1\n","1   Rajesh        M   8.9   9.1   9.3     A       1\n","2   Kissan        V   9.9   9.8  10.0     A       0\n","3     Mary        N   7.7   8.0   NaN     B       0\n","4     Jeen        K   9.8   9.1   9.9    A+       1\n","5      Raj        M   8.9   9.1   9.3     A       1\n","6   Hassan        V   9.9   9.0   9.2     A       1\n","7     Mari        N   7.7   8.0   7.1     B       1\n","8     Jess        K   NaN   9.1   9.9    A+       1\n","9   Rajini        M   NaN   9.1   9.3     A       0\n","10   Kiran        V   NaN   9.3   9.2     A       0\n","11    Maya        N   7.7   8.0   7.1     B       0\n","12   Jolin        K   9.8   9.1   9.9    A+       1\n","13  Rajesh        M   8.9   9.1   9.3     A       1\n","14    Riya        M   9.3   9.9  10.0     A       1\n","15    Sana        V   9.9   9.3   9.2     A       0\n","16    Mark        N   7.7   8.0   7.0     B       0"],"text/html":["\n","  <div id=\"df-24ee36dc-bc44-46a2-9ea3-8748597e81cb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Joe</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kissan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Mary</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>NaN</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jeen</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Raj</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Hassan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.0</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Mari</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Jess</td>\n","      <td>K</td>\n","      <td>NaN</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Rajini</td>\n","      <td>M</td>\n","      <td>NaN</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Kiran</td>\n","      <td>V</td>\n","      <td>NaN</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Maya</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Jolin</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Riya</td>\n","      <td>M</td>\n","      <td>9.3</td>\n","      <td>9.9</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Sana</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Mark</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-24ee36dc-bc44-46a2-9ea3-8748597e81cb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-24ee36dc-bc44-46a2-9ea3-8748597e81cb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-24ee36dc-bc44-46a2-9ea3-8748597e81cb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d8cf5bdc-c6bd-4f6e-bec1-1f00ec0eaa7c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d8cf5bdc-c6bd-4f6e-bec1-1f00ec0eaa7c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d8cf5bdc-c6bd-4f6e-bec1-1f00ec0eaa7c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_92bcde12-7e6b-4baa-93a9-55f109a4bc25\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_92bcde12-7e6b-4baa-93a9-55f109a4bc25 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 17,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Joe\",\n          \"Rajesh\",\n          \"Raj\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"M\",\n          \"N\",\n          \"K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9294036845156195,\n        \"min\": 7.7,\n        \"max\": 9.9,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          8.9,\n          9.3,\n          9.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6471089552772393,\n        \"min\": 8.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10.0,\n          9.1,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0576703960434304,\n        \"min\": 7.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          9.9,\n          9.3,\n          7.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A+\",\n          \"A\",\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["df2=pd.read_csv(\"/content/grades_withnulls.csv\")\n","df2.fillna(555)\n","df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":582},"id":"WDm4_LQ2DN2Z","executionInfo":{"status":"ok","timestamp":1708928075651,"user_tz":-330,"elapsed":12,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"3ed96d38-c15f-4794-964d-60e254e2710e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Names Initials  SEM1  SEM2  SEM3 Grade  Placed\n","0      Joe        K   9.8  10.0   9.9    A+       1\n","1   Rajesh        M   8.9   9.1   9.3     A       1\n","2   Kissan        V   9.9   9.8  10.0     A       0\n","3     Mary        N   7.7   8.0   NaN     B       0\n","4     Jeen        K   9.8   9.1   9.9    A+       1\n","5      Raj        M   8.9   9.1   9.3     A       1\n","6   Hassan        V   9.9   9.0   9.2     A       1\n","7     Mari        N   7.7   8.0   7.1     B       1\n","8     Jess        K   NaN   9.1   9.9    A+       1\n","9   Rajini        M   NaN   9.1   9.3     A       0\n","10   Kiran        V   NaN   9.3   9.2     A       0\n","11    Maya        N   7.7   8.0   7.1     B       0\n","12   Jolin        K   9.8   9.1   9.9    A+       1\n","13  Rajesh        M   8.9   9.1   9.3     A       1\n","14    Riya        M   9.3   9.9  10.0     A       1\n","15    Sana        V   9.9   9.3   9.2     A       0\n","16    Mark        N   7.7   8.0   7.0     B       0"],"text/html":["\n","  <div id=\"df-4fc2f239-d875-4d25-bc38-d4298e2d0d33\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Joe</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kissan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Mary</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>NaN</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jeen</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Raj</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Hassan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.0</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Mari</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Jess</td>\n","      <td>K</td>\n","      <td>NaN</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Rajini</td>\n","      <td>M</td>\n","      <td>NaN</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Kiran</td>\n","      <td>V</td>\n","      <td>NaN</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Maya</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Jolin</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Riya</td>\n","      <td>M</td>\n","      <td>9.3</td>\n","      <td>9.9</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Sana</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Mark</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4fc2f239-d875-4d25-bc38-d4298e2d0d33')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4fc2f239-d875-4d25-bc38-d4298e2d0d33 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4fc2f239-d875-4d25-bc38-d4298e2d0d33');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-69082642-9801-4053-8c66-cf9d9f4deb64\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-69082642-9801-4053-8c66-cf9d9f4deb64')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-69082642-9801-4053-8c66-cf9d9f4deb64 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_8cc7c6e7-409e-487f-bb2c-ea689db6a36a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df2')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8cc7c6e7-409e-487f-bb2c-ea689db6a36a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df2');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df2","summary":"{\n  \"name\": \"df2\",\n  \"rows\": 17,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Joe\",\n          \"Rajesh\",\n          \"Raj\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"M\",\n          \"N\",\n          \"K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9294036845156195,\n        \"min\": 7.7,\n        \"max\": 9.9,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          8.9,\n          9.3,\n          9.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6471089552772393,\n        \"min\": 8.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10.0,\n          9.1,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0576703960434304,\n        \"min\": 7.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          9.9,\n          9.3,\n          7.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A+\",\n          \"A\",\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["df2=pd.read_csv(\"/content/grades_withnulls.csv\")\n","df2.fillna(555,inplace=True)\n","df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":582},"id":"tNbnZ7jWCqqC","executionInfo":{"status":"ok","timestamp":1708938099015,"user_tz":-330,"elapsed":17,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"d80edcf2-9102-4908-cac3-cb4c1642d97f"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Names Initials   SEM1  SEM2   SEM3 Grade  Placed\n","0      Joe        K    9.8  10.0    9.9    A+       1\n","1   Rajesh        M    8.9   9.1    9.3     A       1\n","2   Kissan        V    9.9   9.8   10.0     A       0\n","3     Mary        N    7.7   8.0  555.0     B       0\n","4     Jeen        K    9.8   9.1    9.9    A+       1\n","5      Raj        M    8.9   9.1    9.3     A       1\n","6   Hassan        V    9.9   9.0    9.2     A       1\n","7     Mari        N    7.7   8.0    7.1     B       1\n","8     Jess        K  555.0   9.1    9.9    A+       1\n","9   Rajini        M  555.0   9.1    9.3     A       0\n","10   Kiran        V  555.0   9.3    9.2     A       0\n","11    Maya        N    7.7   8.0    7.1     B       0\n","12   Jolin        K    9.8   9.1    9.9    A+       1\n","13  Rajesh        M    8.9   9.1    9.3     A       1\n","14    Riya        M    9.3   9.9   10.0     A       1\n","15    Sana        V    9.9   9.3    9.2     A       0\n","16    Mark        N    7.7   8.0    7.0     B       0"],"text/html":["\n","  <div id=\"df-122aaca9-9bd9-496e-9013-bed97c5823d7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Joe</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kissan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Mary</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>555.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jeen</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Raj</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Hassan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.0</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Mari</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Jess</td>\n","      <td>K</td>\n","      <td>555.0</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Rajini</td>\n","      <td>M</td>\n","      <td>555.0</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Kiran</td>\n","      <td>V</td>\n","      <td>555.0</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Maya</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Jolin</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Riya</td>\n","      <td>M</td>\n","      <td>9.3</td>\n","      <td>9.9</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Sana</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Mark</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-122aaca9-9bd9-496e-9013-bed97c5823d7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-122aaca9-9bd9-496e-9013-bed97c5823d7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-122aaca9-9bd9-496e-9013-bed97c5823d7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7c395db7-dc10-4d20-a192-448ec04f9056\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7c395db7-dc10-4d20-a192-448ec04f9056')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7c395db7-dc10-4d20-a192-448ec04f9056 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5edb2562-eb75-4e39-b3fb-9bbc4f08bc82\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df2')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5edb2562-eb75-4e39-b3fb-9bbc4f08bc82 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df2');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df2","summary":"{\n  \"name\": \"df2\",\n  \"rows\": 17,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Joe\",\n          \"Rajesh\",\n          \"Raj\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"M\",\n          \"N\",\n          \"K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 214.55657504970296,\n        \"min\": 7.7,\n        \"max\": 555.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          9.8,\n          8.9,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6471089552772393,\n        \"min\": 8.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10.0,\n          9.1,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 132.4041581784393,\n        \"min\": 7.0,\n        \"max\": 555.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          9.9,\n          9.3,\n          7.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A+\",\n          \"A\",\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":582},"id":"3JWX1tfBDSez","executionInfo":{"status":"ok","timestamp":1708938095699,"user_tz":-330,"elapsed":16,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"a9bab831-1e27-46e1-c5eb-6c9e190c1378"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Names Initials  SEM1  SEM2  SEM3 Grade  Placed\n","0      Joe        K   9.8  10.0   9.9    A+       1\n","1   Rajesh        M   8.9   9.1   9.3     A       1\n","2   Kissan        V   9.9   9.8  10.0     A       0\n","3     Mary        N   7.7   8.0   NaN     B       0\n","4     Jeen        K   9.8   9.1   9.9    A+       1\n","5      Raj        M   8.9   9.1   9.3     A       1\n","6   Hassan        V   9.9   9.0   9.2     A       1\n","7     Mari        N   7.7   8.0   7.1     B       1\n","8     Jess        K   NaN   9.1   9.9    A+       1\n","9   Rajini        M   NaN   9.1   9.3     A       0\n","10   Kiran        V   NaN   9.3   9.2     A       0\n","11    Maya        N   7.7   8.0   7.1     B       0\n","12   Jolin        K   9.8   9.1   9.9    A+       1\n","13  Rajesh        M   8.9   9.1   9.3     A       1\n","14    Riya        M   9.3   9.9  10.0     A       1\n","15    Sana        V   9.9   9.3   9.2     A       0\n","16    Mark        N   7.7   8.0   7.0     B       0"],"text/html":["\n","  <div id=\"df-0cc8aa82-9b68-4cdf-be4f-772124a3b223\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Joe</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kissan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Mary</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>NaN</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jeen</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Raj</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Hassan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.0</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Mari</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Jess</td>\n","      <td>K</td>\n","      <td>NaN</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Rajini</td>\n","      <td>M</td>\n","      <td>NaN</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Kiran</td>\n","      <td>V</td>\n","      <td>NaN</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Maya</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Jolin</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Riya</td>\n","      <td>M</td>\n","      <td>9.3</td>\n","      <td>9.9</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Sana</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Mark</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0cc8aa82-9b68-4cdf-be4f-772124a3b223')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0cc8aa82-9b68-4cdf-be4f-772124a3b223 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0cc8aa82-9b68-4cdf-be4f-772124a3b223');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6bf57328-d756-45ee-b321-e8fd6eb1fd66\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6bf57328-d756-45ee-b321-e8fd6eb1fd66')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6bf57328-d756-45ee-b321-e8fd6eb1fd66 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a6a81184-a50d-4faf-b39c-dee10031aa8c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df2')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a6a81184-a50d-4faf-b39c-dee10031aa8c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df2');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df2","summary":"{\n  \"name\": \"df2\",\n  \"rows\": 17,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Joe\",\n          \"Rajesh\",\n          \"Raj\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"M\",\n          \"N\",\n          \"K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9294036845156195,\n        \"min\": 7.7,\n        \"max\": 9.9,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          8.9,\n          9.3,\n          9.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6471089552772393,\n        \"min\": 8.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10.0,\n          9.1,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0576703960434304,\n        \"min\": 7.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          9.9,\n          9.3,\n          7.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A+\",\n          \"A\",\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["df2=pd.read_csv(\"/content/grades_withnulls.csv\")\n","mv=df['SEM2'].mean()\n","print(mv)\n","df2.fillna(mv,inplace=True)\n","df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":599},"id":"5nMPx21HDd_n","executionInfo":{"status":"ok","timestamp":1708928397857,"user_tz":-330,"elapsed":444,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"9c974a09-88f1-4cba-90dd-130e4ee88b94"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["9.100000000000001\n"]},{"output_type":"execute_result","data":{"text/plain":["     Names Initials  SEM1  SEM2  SEM3 Grade  Placed\n","0      Joe        K   9.8  10.0   9.9    A+       1\n","1   Rajesh        M   8.9   9.1   9.3     A       1\n","2   Kissan        V   9.9   9.8  10.0     A       0\n","3     Mary        N   7.7   8.0   9.1     B       0\n","4     Jeen        K   9.8   9.1   9.9    A+       1\n","5      Raj        M   8.9   9.1   9.3     A       1\n","6   Hassan        V   9.9   9.0   9.2     A       1\n","7     Mari        N   7.7   8.0   7.1     B       1\n","8     Jess        K   9.1   9.1   9.9    A+       1\n","9   Rajini        M   9.1   9.1   9.3     A       0\n","10   Kiran        V   9.1   9.3   9.2     A       0\n","11    Maya        N   7.7   8.0   7.1     B       0\n","12   Jolin        K   9.8   9.1   9.9    A+       1\n","13  Rajesh        M   8.9   9.1   9.3     A       1\n","14    Riya        M   9.3   9.9  10.0     A       1\n","15    Sana        V   9.9   9.3   9.2     A       0\n","16    Mark        N   7.7   8.0   7.0     B       0"],"text/html":["\n","  <div id=\"df-65985e06-a83f-4683-8ed2-c8a821a8a9c2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Joe</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kissan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Mary</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>9.1</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jeen</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Raj</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Hassan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.0</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Mari</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Jess</td>\n","      <td>K</td>\n","      <td>9.1</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Rajini</td>\n","      <td>M</td>\n","      <td>9.1</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Kiran</td>\n","      <td>V</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Maya</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Jolin</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Riya</td>\n","      <td>M</td>\n","      <td>9.3</td>\n","      <td>9.9</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Sana</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Mark</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-65985e06-a83f-4683-8ed2-c8a821a8a9c2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-65985e06-a83f-4683-8ed2-c8a821a8a9c2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-65985e06-a83f-4683-8ed2-c8a821a8a9c2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-951a78ba-649a-4624-8514-c5c9ebdf6620\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-951a78ba-649a-4624-8514-c5c9ebdf6620')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-951a78ba-649a-4624-8514-c5c9ebdf6620 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_74047499-ae87-4eaf-9853-4119e789ca25\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df2')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_74047499-ae87-4eaf-9853-4119e789ca25 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df2');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df2","summary":"{\n  \"name\": \"df2\",\n  \"rows\": 17,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Joe\",\n          \"Rajesh\",\n          \"Raj\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"M\",\n          \"N\",\n          \"K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.838810432205317,\n        \"min\": 7.7,\n        \"max\": 9.9,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          9.8,\n          8.9,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6471089552772393,\n        \"min\": 8.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10.0,\n          9.1,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0240849574132023,\n        \"min\": 7.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          9.9,\n          9.3,\n          7.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A+\",\n          \"A\",\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["mydf=pd.read_csv(\"/content/grades_withnulls.csv\")\n","mv=df['SEM2'].mean()\n","print(mv)\n","mydf.fillna(mv,inplace=True)\n","mydf"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":599},"id":"iuBkYyIiEhPQ","executionInfo":{"status":"ok","timestamp":1708928815274,"user_tz":-330,"elapsed":760,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"58c83f85-545d-4485-f982-555e5a3555e3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["9.0\n"]},{"output_type":"execute_result","data":{"text/plain":["     Names Initials  SEM1  SEM2  SEM3 Grade  Placed\n","0      Joe        K   9.8  10.0   9.9    A+       1\n","1   Rajesh        M   8.9   9.1   9.3     A       1\n","2   Kissan        V   9.9   9.8  10.0     A       0\n","3     Mary        N   7.7   8.0   9.0     B       0\n","4     Jeen        K   9.8   9.1   9.9    A+       1\n","5      Raj        M   8.9   9.1   9.3     A       1\n","6   Hassan        V   9.9   9.0   9.2     A       1\n","7     Mari        N   7.7   8.0   7.1     B       1\n","8     Jess        K   9.0   9.1   9.9    A+       1\n","9   Rajini        M   9.0   9.1   9.3     A       0\n","10   Kiran        V   9.0   9.3   9.2     A       0\n","11    Maya        N   7.7   8.0   7.1     B       0\n","12   Jolin        K   9.8   9.1   9.9    A+       1\n","13  Rajesh        M   8.9   9.1   9.3     A       1\n","14    Riya        M   9.3   9.9  10.0     A       1\n","15    Sana        V   9.9   9.3   9.2     A       0\n","16    Mark        N   7.7   8.0   7.0     B       0"],"text/html":["\n","  <div id=\"df-c4bdde17-823c-4171-bc63-89bedca56806\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Joe</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kissan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Mary</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>9.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jeen</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Raj</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Hassan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.0</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Mari</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Jess</td>\n","      <td>K</td>\n","      <td>9.0</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Rajini</td>\n","      <td>M</td>\n","      <td>9.0</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Kiran</td>\n","      <td>V</td>\n","      <td>9.0</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Maya</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Jolin</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Riya</td>\n","      <td>M</td>\n","      <td>9.3</td>\n","      <td>9.9</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Sana</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Mark</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c4bdde17-823c-4171-bc63-89bedca56806')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c4bdde17-823c-4171-bc63-89bedca56806 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c4bdde17-823c-4171-bc63-89bedca56806');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-22522898-9232-4c31-bbee-3a10efee0477\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-22522898-9232-4c31-bbee-3a10efee0477')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-22522898-9232-4c31-bbee-3a10efee0477 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a0435cb1-ac6f-463d-bc60-f4eb82713822\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('mydf')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a0435cb1-ac6f-463d-bc60-f4eb82713822 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('mydf');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"mydf","summary":"{\n  \"name\": \"mydf\",\n  \"rows\": 17,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Joe\",\n          \"Rajesh\",\n          \"Raj\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"M\",\n          \"N\",\n          \"K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8377578619709384,\n        \"min\": 7.7,\n        \"max\": 9.9,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          9.8,\n          8.9,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6471089552772393,\n        \"min\": 8.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10.0,\n          9.1,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.024372117589169,\n        \"min\": 7.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          9.9,\n          9.3,\n          7.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A+\",\n          \"A\",\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["#access the data\n","#iloc =integer location ,index\n","#loc = field name ,index\n","mydf.loc[0] #first record!"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":81},"id":"__LCgR_3FuC4","executionInfo":{"status":"ok","timestamp":1708928868912,"user_tz":-330,"elapsed":403,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"14947fa5-9d7f-44d0-ef60-eda66022735a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Names Initials  SEM1  SEM2  SEM3 Grade  Placed\n","0   Joe        K   9.8  10.0   9.9    A+       1"],"text/html":["\n","  <div id=\"df-7565b40b-f635-48e4-bc03-209e7eaa6e03\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Joe</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7565b40b-f635-48e4-bc03-209e7eaa6e03')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7565b40b-f635-48e4-bc03-209e7eaa6e03 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7565b40b-f635-48e4-bc03-209e7eaa6e03');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"mydf\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Joe\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 9.8,\n        \"max\": 9.8,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          9.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 10.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          10.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 9.9,\n        \"max\": 9.9,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          9.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"A+\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["mydf.loc[0:5] #first record!"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"nP2bf9crGIRO","executionInfo":{"status":"ok","timestamp":1708928898171,"user_tz":-330,"elapsed":456,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"e5a1a1b7-ebf3-44da-8ea7-2d82fb4dfccc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Names Initials  SEM1  SEM2  SEM3 Grade  Placed\n","0     Joe        K   9.8  10.0   9.9    A+       1\n","1  Rajesh        M   8.9   9.1   9.3     A       1\n","2  Kissan        V   9.9   9.8  10.0     A       0\n","3    Mary        N   7.7   8.0   9.0     B       0\n","4    Jeen        K   9.8   9.1   9.9    A+       1\n","5     Raj        M   8.9   9.1   9.3     A       1"],"text/html":["\n","  <div id=\"df-4f317c41-08c2-4a13-bb25-d3fff1b01949\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Joe</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kissan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Mary</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>9.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jeen</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Raj</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4f317c41-08c2-4a13-bb25-d3fff1b01949')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4f317c41-08c2-4a13-bb25-d3fff1b01949 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4f317c41-08c2-4a13-bb25-d3fff1b01949');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-217440a4-aec5-463c-878f-b8185fdfd85d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-217440a4-aec5-463c-878f-b8185fdfd85d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-217440a4-aec5-463c-878f-b8185fdfd85d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"mydf\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Joe\",\n          \"Rajesh\",\n          \"Raj\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"M\",\n          \"N\",\n          \"K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.852447456836295,\n        \"min\": 7.7,\n        \"max\": 9.9,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          8.9,\n          7.7,\n          9.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7026141662866375,\n        \"min\": 8.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          9.1,\n          8.0,\n          10.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.417931413830866,\n        \"min\": 9.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          9.3,\n          9.0,\n          9.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A+\",\n          \"A\",\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["mydf.loc[8:14] #range of records!"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"fDad15xfGYld","executionInfo":{"status":"ok","timestamp":1708928908606,"user_tz":-330,"elapsed":16,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"e97e4fed-4b2f-43ca-cb2f-a04cfd35408f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Names Initials  SEM1  SEM2  SEM3 Grade  Placed\n","8     Jess        K   9.0   9.1   9.9    A+       1\n","9   Rajini        M   9.0   9.1   9.3     A       0\n","10   Kiran        V   9.0   9.3   9.2     A       0\n","11    Maya        N   7.7   8.0   7.1     B       0\n","12   Jolin        K   9.8   9.1   9.9    A+       1\n","13  Rajesh        M   8.9   9.1   9.3     A       1\n","14    Riya        M   9.3   9.9  10.0     A       1"],"text/html":["\n","  <div id=\"df-13ba32e2-788c-4444-b212-076eee684e6c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>8</th>\n","      <td>Jess</td>\n","      <td>K</td>\n","      <td>9.0</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Rajini</td>\n","      <td>M</td>\n","      <td>9.0</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Kiran</td>\n","      <td>V</td>\n","      <td>9.0</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Maya</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Jolin</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Riya</td>\n","      <td>M</td>\n","      <td>9.3</td>\n","      <td>9.9</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-13ba32e2-788c-4444-b212-076eee684e6c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-13ba32e2-788c-4444-b212-076eee684e6c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-13ba32e2-788c-4444-b212-076eee684e6c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-68129405-e2d8-4b2f-a4f2-79adec92096f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-68129405-e2d8-4b2f-a4f2-79adec92096f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-68129405-e2d8-4b2f-a4f2-79adec92096f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"mydf\",\n  \"rows\": 7,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Jess\",\n          \"Rajini\",\n          \"Rajesh\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"M\",\n          \"N\",\n          \"K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6347102826149448,\n        \"min\": 7.7,\n        \"max\": 9.8,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          7.7,\n          9.3,\n          9.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5610364558225293,\n        \"min\": 8.0,\n        \"max\": 9.9,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          9.3,\n          9.9,\n          9.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.003090462615649,\n        \"min\": 7.1,\n        \"max\": 10.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          9.3,\n          10.0,\n          9.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A+\",\n          \"A\",\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["mydf.loc[5:7,\"SEM1\"] #first record!"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7lOwVslDGkdB","executionInfo":{"status":"ok","timestamp":1708928996122,"user_tz":-330,"elapsed":618,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"b42c0143-a180-40a2-e29d-f271dad6c0d1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5    8.9\n","6    9.9\n","7    7.7\n","Name: SEM1, dtype: float64"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["#access the data\n","#iloc =integer location ,index #access both rows&columns\n","#loc = field name ,index\n","#dfname.loc[index]--->rows\n","#dfname.loc[st:stop]--->range of rows\n","#dfname.loc[r_ind,col_name]---->row&col\n","mydf.loc[0] #first record!"],"metadata":{"id":"AiLegWPqHQQA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["mydf.iloc[10:12,0:3]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"QeJKAgdBH79k","executionInfo":{"status":"ok","timestamp":1708929536150,"user_tz":-330,"elapsed":17,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"080e48dc-165c-4104-d28d-dedecf4df40a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Names Initials  SEM1\n","10  Kiran        V   9.0\n","11   Maya        N   7.7"],"text/html":["\n","  <div id=\"df-66eb11a6-0e1a-42c2-8476-06399821f844\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>10</th>\n","      <td>Kiran</td>\n","      <td>V</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Maya</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-66eb11a6-0e1a-42c2-8476-06399821f844')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-66eb11a6-0e1a-42c2-8476-06399821f844 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-66eb11a6-0e1a-42c2-8476-06399821f844');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8386b4ae-9355-46d7-91a1-f1213674cde4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8386b4ae-9355-46d7-91a1-f1213674cde4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8386b4ae-9355-46d7-91a1-f1213674cde4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"mydf\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Maya\",\n          \"Kiran\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"N\",\n          \"V\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9192388155425116,\n        \"min\": 7.7,\n        \"max\": 9.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          7.7,\n          9.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":79}]},{"cell_type":"code","source":["mydf[mydf.Grade=='A']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":331},"id":"R9ZKzwHoJICx","executionInfo":{"status":"ok","timestamp":1708929995328,"user_tz":-330,"elapsed":708,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"64f21409-8e0d-4f6b-8525-f66f7c169821"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Names Initials  SEM1  SEM2  SEM3 Grade  Placed\n","1   Rajesh        M   8.9   9.1   9.3     A       1\n","2   Kissan        V   9.9   9.8  10.0     A       0\n","5      Raj        M   8.9   9.1   9.3     A       1\n","6   Hassan        V   9.9   9.0   9.2     A       1\n","9   Rajini        M   9.0   9.1   9.3     A       0\n","10   Kiran        V   9.0   9.3   9.2     A       0\n","13  Rajesh        M   8.9   9.1   9.3     A       1\n","14    Riya        M   9.3   9.9  10.0     A       1\n","15    Sana        V   9.9   9.3   9.2     A       0"],"text/html":["\n","  <div id=\"df-3da018f6-17f7-4f1a-b766-3c6699dfdbde\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kissan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Raj</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Hassan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.0</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Rajini</td>\n","      <td>M</td>\n","      <td>9.0</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Kiran</td>\n","      <td>V</td>\n","      <td>9.0</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Riya</td>\n","      <td>M</td>\n","      <td>9.3</td>\n","      <td>9.9</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Sana</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3da018f6-17f7-4f1a-b766-3c6699dfdbde')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3da018f6-17f7-4f1a-b766-3c6699dfdbde button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3da018f6-17f7-4f1a-b766-3c6699dfdbde');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0d5f6fa2-d880-40be-81e9-b8bdee65bb8d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0d5f6fa2-d880-40be-81e9-b8bdee65bb8d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0d5f6fa2-d880-40be-81e9-b8bdee65bb8d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"mydf[mydf\",\n  \"rows\": 9,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"Kissan\",\n          \"Kiran\",\n          \"Rajesh\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"V\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.46636895265444084,\n        \"min\": 8.9,\n        \"max\": 9.9,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          9.9,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.32787192621510036,\n        \"min\": 9.0,\n        \"max\": 9.9,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          9.8,\n          9.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3308238873546535,\n        \"min\": 9.2,\n        \"max\": 10.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          9.3,\n          10.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"A\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":87}]},{"cell_type":"code","source":["mydf[mydf.SEM3==9.3]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"XyWpS-q_KmEN","executionInfo":{"status":"ok","timestamp":1708930059086,"user_tz":-330,"elapsed":21,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"87014773-e17b-4163-e373-863764d7a8d9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Names Initials  SEM1  SEM2  SEM3 Grade  Placed\n","1   Rajesh        M   8.9   9.1   9.3     A       1\n","5      Raj        M   8.9   9.1   9.3     A       1\n","9   Rajini        M   9.0   9.1   9.3     A       0\n","13  Rajesh        M   8.9   9.1   9.3     A       1"],"text/html":["\n","  <div id=\"df-4e8ed5e2-97d0-4984-aa6d-1a385e0e1483\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Raj</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Rajini</td>\n","      <td>M</td>\n","      <td>9.0</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4e8ed5e2-97d0-4984-aa6d-1a385e0e1483')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4e8ed5e2-97d0-4984-aa6d-1a385e0e1483 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4e8ed5e2-97d0-4984-aa6d-1a385e0e1483');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a61eb3f5-5889-4435-bc0e-0a6ab8d705c0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a61eb3f5-5889-4435-bc0e-0a6ab8d705c0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a61eb3f5-5889-4435-bc0e-0a6ab8d705c0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"mydf[mydf\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Rajesh\",\n          \"Raj\",\n          \"Rajini\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04999999999999982,\n        \"min\": 8.9,\n        \"max\": 9.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          9.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 9.1,\n        \"max\": 9.1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          9.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 9.3,\n        \"max\": 9.3,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"A\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":90}]},{"cell_type":"code","source":["mydf.loc[mydf['SEM1']>=9.8,['Names']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"zo94iiTPK71b","executionInfo":{"status":"ok","timestamp":1708930188304,"user_tz":-330,"elapsed":465,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"007fa7d5-1cca-4d50-f12a-db3ceb169735"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Names\n","0      Joe\n","2   Kissan\n","4     Jeen\n","6   Hassan\n","12   Jolin\n","15    Sana"],"text/html":["\n","  <div id=\"df-b4cbeb12-9b74-4958-8fec-62e0f9e5ed50\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Joe</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kissan</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jeen</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Hassan</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Jolin</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Sana</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b4cbeb12-9b74-4958-8fec-62e0f9e5ed50')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b4cbeb12-9b74-4958-8fec-62e0f9e5ed50 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b4cbeb12-9b74-4958-8fec-62e0f9e5ed50');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-34db38fc-373e-4a42-a371-c49c3569b049\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-34db38fc-373e-4a42-a371-c49c3569b049')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-34db38fc-373e-4a42-a371-c49c3569b049 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"mydf\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Joe\",\n          \"Kissan\",\n          \"Sana\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":93}]},{"cell_type":"code","source":["mydf.loc[mydf['SEM3']>9.7,['Grade']]#accessing greter than 9.7 but printing grade column"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"NoAroRx2Lh3E","executionInfo":{"status":"ok","timestamp":1708930703380,"user_tz":-330,"elapsed":20,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"20849e67-02c4-4279-ac9c-e3201e6f9274"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Grade\n","0     A+\n","2      A\n","4     A+\n","8     A+\n","12    A+\n","14     A"],"text/html":["\n","  <div id=\"df-fdcbf9ef-a0a1-41ca-ad4b-4f2758355f1b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Grade</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>A+</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>A</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>A+</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>A+</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>A+</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>A</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fdcbf9ef-a0a1-41ca-ad4b-4f2758355f1b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fdcbf9ef-a0a1-41ca-ad4b-4f2758355f1b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fdcbf9ef-a0a1-41ca-ad4b-4f2758355f1b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c0c7cc07-f5d7-4776-8962-58b4af241f14\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c0c7cc07-f5d7-4776-8962-58b4af241f14')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c0c7cc07-f5d7-4776-8962-58b4af241f14 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"mydf\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"A\",\n          \"A+\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":99}]},{"cell_type":"code","source":["mydf.drop_duplicates(inplace=True)\n","print(mydf)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hQ3GQKA-NBnz","executionInfo":{"status":"ok","timestamp":1708931001541,"user_tz":-330,"elapsed":9,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"015b7bb3-0e22-4525-9cf3-e6128f2ec731"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["     Names Initials  SEM1  SEM2  SEM3 Grade  Placed\n","0      Joe        K   9.8  10.0   9.9    A+       1\n","1   Rajesh        M   8.9   9.1   9.3     A       1\n","2   Kissan        V   9.9   9.8  10.0     A       0\n","3     Mary        N   7.7   8.0   9.0     B       0\n","4     Jeen        K   9.8   9.1   9.9    A+       1\n","5      Raj        M   8.9   9.1   9.3     A       1\n","6   Hassan        V   9.9   9.0   9.2     A       1\n","7     Mari        N   7.7   8.0   7.1     B       1\n","8     Jess        K   9.0   9.1   9.9    A+       1\n","9   Rajini        M   9.0   9.1   9.3     A       0\n","10   Kiran        V   9.0   9.3   9.2     A       0\n","11    Maya        N   7.7   8.0   7.1     B       0\n","12   Jolin        K   9.8   9.1   9.9    A+       1\n","14    Riya        M   9.3   9.9  10.0     A       1\n","15    Sana        V   9.9   9.3   9.2     A       0\n","16    Mark        N   7.7   8.0   7.0     B       0\n"]}]},{"cell_type":"code","source":["mydf"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":551},"id":"Y_FyPJp_LMV9","executionInfo":{"status":"ok","timestamp":1708931009434,"user_tz":-330,"elapsed":453,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"6eb40204-6907-4921-b030-e575ba567387"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Names Initials  SEM1  SEM2  SEM3 Grade  Placed\n","0      Joe        K   9.8  10.0   9.9    A+       1\n","1   Rajesh        M   8.9   9.1   9.3     A       1\n","2   Kissan        V   9.9   9.8  10.0     A       0\n","3     Mary        N   7.7   8.0   9.0     B       0\n","4     Jeen        K   9.8   9.1   9.9    A+       1\n","5      Raj        M   8.9   9.1   9.3     A       1\n","6   Hassan        V   9.9   9.0   9.2     A       1\n","7     Mari        N   7.7   8.0   7.1     B       1\n","8     Jess        K   9.0   9.1   9.9    A+       1\n","9   Rajini        M   9.0   9.1   9.3     A       0\n","10   Kiran        V   9.0   9.3   9.2     A       0\n","11    Maya        N   7.7   8.0   7.1     B       0\n","12   Jolin        K   9.8   9.1   9.9    A+       1\n","14    Riya        M   9.3   9.9  10.0     A       1\n","15    Sana        V   9.9   9.3   9.2     A       0\n","16    Mark        N   7.7   8.0   7.0     B       0"],"text/html":["\n","  <div id=\"df-9c790903-de56-4c4b-a3a8-2019a21eed53\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Joe</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kissan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Mary</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>9.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jeen</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Raj</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Hassan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.0</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Mari</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Jess</td>\n","      <td>K</td>\n","      <td>9.0</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Rajini</td>\n","      <td>M</td>\n","      <td>9.0</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Kiran</td>\n","      <td>V</td>\n","      <td>9.0</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Maya</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Jolin</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Riya</td>\n","      <td>M</td>\n","      <td>9.3</td>\n","      <td>9.9</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Sana</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Mark</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9c790903-de56-4c4b-a3a8-2019a21eed53')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9c790903-de56-4c4b-a3a8-2019a21eed53 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9c790903-de56-4c4b-a3a8-2019a21eed53');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-518baedb-9531-4044-9736-ff8b7b328c1f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-518baedb-9531-4044-9736-ff8b7b328c1f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-518baedb-9531-4044-9736-ff8b7b328c1f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_45fe26fc-958d-4cb5-a554-8a603d43fd48\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('mydf')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_45fe26fc-958d-4cb5-a554-8a603d43fd48 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('mydf');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"mydf","summary":"{\n  \"name\": \"mydf\",\n  \"rows\": 16,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Joe\",\n          \"Rajesh\",\n          \"Raj\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"M\",\n          \"N\",\n          \"K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8648699324175861,\n        \"min\": 7.7,\n        \"max\": 9.9,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          9.8,\n          8.9,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6678011180982953,\n        \"min\": 8.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10.0,\n          9.1,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0565470489602755,\n        \"min\": 7.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          9.9,\n          9.3,\n          7.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A+\",\n          \"A\",\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":107}]},{"cell_type":"code","source":["mydf.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"lJn2Rz7PPTSL","executionInfo":{"status":"ok","timestamp":1708931278949,"user_tz":-330,"elapsed":1214,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"0fe86c54-8e54-4273-ae36-de80bca8b3d3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Names Initials  SEM1  SEM2  SEM3 Grade  Placed\n","0     Joe        K   9.8  10.0   9.9    A+       1\n","1  Rajesh        M   8.9   9.1   9.3     A       1\n","2  Kissan        V   9.9   9.8  10.0     A       0\n","3    Mary        N   7.7   8.0   9.0     B       0\n","4    Jeen        K   9.8   9.1   9.9    A+       1\n","5     Raj        M   8.9   9.1   9.3     A       1\n","6  Hassan        V   9.9   9.0   9.2     A       1\n","7    Mari        N   7.7   8.0   7.1     B       1\n","8    Jess        K   9.0   9.1   9.9    A+       1\n","9  Rajini        M   9.0   9.1   9.3     A       0"],"text/html":["\n","  <div id=\"df-6b656733-bf34-4d90-8b34-51d3cb83f3b0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Joe</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kissan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Mary</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>9.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jeen</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Raj</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Hassan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.0</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Mari</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Jess</td>\n","      <td>K</td>\n","      <td>9.0</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Rajini</td>\n","      <td>M</td>\n","      <td>9.0</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6b656733-bf34-4d90-8b34-51d3cb83f3b0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6b656733-bf34-4d90-8b34-51d3cb83f3b0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6b656733-bf34-4d90-8b34-51d3cb83f3b0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b22fe134-f83f-468d-bd41-1f0171b17e5f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b22fe134-f83f-468d-bd41-1f0171b17e5f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b22fe134-f83f-468d-bd41-1f0171b17e5f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"mydf","summary":"{\n  \"name\": \"mydf\",\n  \"rows\": 16,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Joe\",\n          \"Rajesh\",\n          \"Raj\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"M\",\n          \"N\",\n          \"K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8648699324175861,\n        \"min\": 7.7,\n        \"max\": 9.9,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          9.8,\n          8.9,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6678011180982953,\n        \"min\": 8.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10.0,\n          9.1,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0565470489602755,\n        \"min\": 7.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          9.9,\n          9.3,\n          7.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A+\",\n          \"A\",\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":110}]},{"cell_type":"code","source":["mydf.tail(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"wTKH2-8MPYTm","executionInfo":{"status":"ok","timestamp":1708931290626,"user_tz":-330,"elapsed":431,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"6a035ee8-165d-48a3-8e16-b4b39b57c665"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Names Initials  SEM1  SEM2  SEM3 Grade  Placed\n","6   Hassan        V   9.9   9.0   9.2     A       1\n","7     Mari        N   7.7   8.0   7.1     B       1\n","8     Jess        K   9.0   9.1   9.9    A+       1\n","9   Rajini        M   9.0   9.1   9.3     A       0\n","10   Kiran        V   9.0   9.3   9.2     A       0\n","11    Maya        N   7.7   8.0   7.1     B       0\n","12   Jolin        K   9.8   9.1   9.9    A+       1\n","14    Riya        M   9.3   9.9  10.0     A       1\n","15    Sana        V   9.9   9.3   9.2     A       0\n","16    Mark        N   7.7   8.0   7.0     B       0"],"text/html":["\n","  <div id=\"df-c632582f-8228-443b-b8f9-f7b1d421cb1b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>6</th>\n","      <td>Hassan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.0</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Mari</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Jess</td>\n","      <td>K</td>\n","      <td>9.0</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Rajini</td>\n","      <td>M</td>\n","      <td>9.0</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Kiran</td>\n","      <td>V</td>\n","      <td>9.0</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Maya</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Jolin</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Riya</td>\n","      <td>M</td>\n","      <td>9.3</td>\n","      <td>9.9</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Sana</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Mark</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c632582f-8228-443b-b8f9-f7b1d421cb1b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c632582f-8228-443b-b8f9-f7b1d421cb1b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c632582f-8228-443b-b8f9-f7b1d421cb1b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4a67d766-dc4b-4339-b477-2840bf7f1877\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4a67d766-dc4b-4339-b477-2840bf7f1877')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4a67d766-dc4b-4339-b477-2840bf7f1877 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"mydf\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Sana\",\n          \"Mari\",\n          \"Maya\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"N\",\n          \"M\",\n          \"V\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.901849950564579,\n        \"min\": 7.7,\n        \"max\": 9.9,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          7.7,\n          9.3,\n          9.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6562519841239848,\n        \"min\": 8.0,\n        \"max\": 9.9,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          8.0,\n          9.9,\n          9.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.2296792716440785,\n        \"min\": 7.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          9.2,\n          7.1,\n          7.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A\",\n          \"B\",\n          \"A+\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":111}]},{"cell_type":"code","source":["print(mydf[mydf.index,isin(arange(2,7))])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":141},"id":"C02j7q2yPnIT","executionInfo":{"status":"error","timestamp":1708938554309,"user_tz":-330,"elapsed":517,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"5303b00c-b2e5-4d12-beec-e2fae62cb969"},"execution_count":41,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'isin' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-41-70cc0fc2fe25>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmydf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmydf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0misin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m7\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'isin' is not defined"]}]},{"cell_type":"code","source":["mydf[mydf.index==7]#accessing the new indexes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":81},"id":"Seno4DloQrCL","executionInfo":{"status":"ok","timestamp":1708931645132,"user_tz":-330,"elapsed":404,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"8d7c4d0b-f9b0-4b94-f910-7e42b17e6968"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Names Initials  SEM1  SEM2  SEM3 Grade  Placed\n","7  Mari        N   7.7   8.0   7.1     B       1"],"text/html":["\n","  <div id=\"df-f314ea41-86e6-4990-a702-2aec1a671597\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>7</th>\n","      <td>Mari</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f314ea41-86e6-4990-a702-2aec1a671597')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f314ea41-86e6-4990-a702-2aec1a671597 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f314ea41-86e6-4990-a702-2aec1a671597');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"mydf[mydf\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Mari\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"N\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 7.7,\n        \"max\": 7.7,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          7.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 8.0,\n        \"max\": 8.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          8.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 7.1,\n        \"max\": 7.1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          7.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":117}]},{"cell_type":"code","source":["print(mydf.loc[mydf.index==7,\"Grade\"]) #Accessing specific and column"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0XlJkgj2RA_f","executionInfo":{"status":"ok","timestamp":1708931720464,"user_tz":-330,"elapsed":467,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"fdb97adb-d249-4d0b-87a8-56021f8ed076"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["7    B\n","Name: Grade, dtype: object\n"]}]},{"cell_type":"code","source":["#column\n","colname=mydf.columns #view columns\n","print(colname)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QcKU9km_RWKg","executionInfo":{"status":"ok","timestamp":1708931846506,"user_tz":-330,"elapsed":431,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"9b8edbcf-7461-4585-92da-03755744cd73"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['Names', 'Initials', 'SEM1', 'SEM2', 'SEM3', 'Grade', 'Placed'], dtype='object')\n"]}]},{"cell_type":"code","source":["collist=list(mydf.columns)#view colnames\n","print(collist)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3cWRuC2eRqqL","executionInfo":{"status":"ok","timestamp":1708932018680,"user_tz":-330,"elapsed":853,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"e0189f6e-3936-4daa-8c1a-dd39baf9c050"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['Names', 'Initials', 'SEM1', 'SEM2', 'SEM3', 'Grade', 'Placed']\n"]}]},{"cell_type":"code","source":["mydf.rename(columns={\"Grade\":\"GPA\"})\n","mydf.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gGbFd2NTSTqG","executionInfo":{"status":"ok","timestamp":1708932135283,"user_tz":-330,"elapsed":11,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"2c8a7593-bf11-4b40-ce94-3698e80de619"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Names', 'Initials', 'SEM1', 'SEM2', 'SEM3', 'Grade', 'Placed'], dtype='object')"]},"metadata":{},"execution_count":125}]},{"cell_type":"code","source":["mydf.rename(columns={\"Grade\":\"GPA\"},inplace=True)\n","mydf.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3YfS-qg-Sx2G","executionInfo":{"status":"ok","timestamp":1708932181239,"user_tz":-330,"elapsed":1326,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"01c8a674-6cd2-4f1a-dbe5-160eef60bc78"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Names', 'Initials', 'SEM1', 'SEM2', 'SEM3', 'GPA', 'Placed'], dtype='object')"]},"metadata":{},"execution_count":126}]},{"cell_type":"code","source":["#creating a new column\n","#dfname['new col']=values\n","mydf[\"Conduct\"]=\"Good\"\n","mydf"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":582},"id":"445j4vWCS86Y","executionInfo":{"status":"ok","timestamp":1708938053917,"user_tz":-330,"elapsed":15,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"e3a0d482-d9f7-4bec-d208-ee4df62e66cf"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Names Initials  SEM1  SEM2  SEM3 Grade  Placed Conduct\n","0      Joe        K   9.8  10.0   9.9    A+       1    Good\n","1   Rajesh        M   8.9   9.1   9.3     A       1    Good\n","2   Kissan        V   9.9   9.8  10.0     A       0    Good\n","3     Mary        N   7.7   8.0   9.0     B       0    Good\n","4     Jeen        K   9.8   9.1   9.9    A+       1    Good\n","5      Raj        M   8.9   9.1   9.3     A       1    Good\n","6   Hassan        V   9.9   9.0   9.2     A       1    Good\n","7     Mari        N   7.7   8.0   7.1     B       1    Good\n","8     Jess        K   9.0   9.1   9.9    A+       1    Good\n","9   Rajini        M   9.0   9.1   9.3     A       0    Good\n","10   Kiran        V   9.0   9.3   9.2     A       0    Good\n","11    Maya        N   7.7   8.0   7.1     B       0    Good\n","12   Jolin        K   9.8   9.1   9.9    A+       1    Good\n","13  Rajesh        M   8.9   9.1   9.3     A       1    Good\n","14    Riya        M   9.3   9.9  10.0     A       1    Good\n","15    Sana        V   9.9   9.3   9.2     A       0    Good\n","16    Mark        N   7.7   8.0   7.0     B       0    Good"],"text/html":["\n","  <div id=\"df-cc185be0-53c0-4c4f-9eae-598b733acdaf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","      <th>Conduct</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Joe</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","      <td>Good</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","      <td>Good</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kissan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>0</td>\n","      <td>Good</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Mary</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>9.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","      <td>Good</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jeen</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","      <td>Good</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Raj</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","      <td>Good</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Hassan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.0</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>1</td>\n","      <td>Good</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Mari</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>1</td>\n","      <td>Good</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Jess</td>\n","      <td>K</td>\n","      <td>9.0</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","      <td>Good</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Rajini</td>\n","      <td>M</td>\n","      <td>9.0</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>0</td>\n","      <td>Good</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Kiran</td>\n","      <td>V</td>\n","      <td>9.0</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","      <td>Good</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Maya</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>0</td>\n","      <td>Good</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Jolin</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","      <td>Good</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","      <td>Good</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Riya</td>\n","      <td>M</td>\n","      <td>9.3</td>\n","      <td>9.9</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>1</td>\n","      <td>Good</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Sana</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","      <td>Good</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Mark</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","      <td>Good</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cc185be0-53c0-4c4f-9eae-598b733acdaf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cc185be0-53c0-4c4f-9eae-598b733acdaf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cc185be0-53c0-4c4f-9eae-598b733acdaf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-89e34e92-d793-4032-b00a-9616a05ef9a7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-89e34e92-d793-4032-b00a-9616a05ef9a7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-89e34e92-d793-4032-b00a-9616a05ef9a7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5c790f10-d49e-477d-ba9c-525831160f7e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('mydf')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5c790f10-d49e-477d-ba9c-525831160f7e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('mydf');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"mydf","summary":"{\n  \"name\": \"mydf\",\n  \"rows\": 17,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Joe\",\n          \"Rajesh\",\n          \"Raj\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"M\",\n          \"N\",\n          \"K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8377578619709384,\n        \"min\": 7.7,\n        \"max\": 9.9,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          9.8,\n          8.9,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6471089552772393,\n        \"min\": 8.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10.0,\n          9.1,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.024372117589169,\n        \"min\": 7.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          9.9,\n          9.3,\n          7.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A+\",\n          \"A\",\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Conduct\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Good\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["#create a a new column with avg value of sem1,sem2,sem3\n","\n","mydf[\"Average\"]=(mydf[\"SEM1\"]+mydf[\"SEM2\"]+mydf[\"SEM3\"])/3\n","mydf"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":582},"id":"PzAyT78qTP7Q","executionInfo":{"status":"ok","timestamp":1708938215332,"user_tz":-330,"elapsed":593,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"4d7f8abe-5948-4168-824d-33e3f8560889"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Names Initials  SEM1  SEM2  SEM3 Grade  Placed Conduct   Average\n","0      Joe        K   9.8  10.0   9.9    A+       1    Good  9.900000\n","1   Rajesh        M   8.9   9.1   9.3     A       1    Good  9.100000\n","2   Kissan        V   9.9   9.8  10.0     A       0    Good  9.900000\n","3     Mary        N   7.7   8.0   9.0     B       0    Good  8.233333\n","4     Jeen        K   9.8   9.1   9.9    A+       1    Good  9.600000\n","5      Raj        M   8.9   9.1   9.3     A       1    Good  9.100000\n","6   Hassan        V   9.9   9.0   9.2     A       1    Good  9.366667\n","7     Mari        N   7.7   8.0   7.1     B       1    Good  7.600000\n","8     Jess        K   9.0   9.1   9.9    A+       1    Good  9.333333\n","9   Rajini        M   9.0   9.1   9.3     A       0    Good  9.133333\n","10   Kiran        V   9.0   9.3   9.2     A       0    Good  9.166667\n","11    Maya        N   7.7   8.0   7.1     B       0    Good  7.600000\n","12   Jolin        K   9.8   9.1   9.9    A+       1    Good  9.600000\n","13  Rajesh        M   8.9   9.1   9.3     A       1    Good  9.100000\n","14    Riya        M   9.3   9.9  10.0     A       1    Good  9.733333\n","15    Sana        V   9.9   9.3   9.2     A       0    Good  9.466667\n","16    Mark        N   7.7   8.0   7.0     B       0    Good  7.566667"],"text/html":["\n","  <div id=\"df-01e35cd7-e05e-421f-853f-f768ce077ace\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","      <th>Conduct</th>\n","      <th>Average</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Joe</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","      <td>Good</td>\n","      <td>9.900000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","      <td>Good</td>\n","      <td>9.100000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kissan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>0</td>\n","      <td>Good</td>\n","      <td>9.900000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Mary</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>9.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","      <td>Good</td>\n","      <td>8.233333</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jeen</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","      <td>Good</td>\n","      <td>9.600000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Raj</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","      <td>Good</td>\n","      <td>9.100000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Hassan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.0</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>1</td>\n","      <td>Good</td>\n","      <td>9.366667</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Mari</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>1</td>\n","      <td>Good</td>\n","      <td>7.600000</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Jess</td>\n","      <td>K</td>\n","      <td>9.0</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","      <td>Good</td>\n","      <td>9.333333</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Rajini</td>\n","      <td>M</td>\n","      <td>9.0</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>0</td>\n","      <td>Good</td>\n","      <td>9.133333</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Kiran</td>\n","      <td>V</td>\n","      <td>9.0</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","      <td>Good</td>\n","      <td>9.166667</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Maya</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>0</td>\n","      <td>Good</td>\n","      <td>7.600000</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Jolin</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","      <td>Good</td>\n","      <td>9.600000</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","      <td>Good</td>\n","      <td>9.100000</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Riya</td>\n","      <td>M</td>\n","      <td>9.3</td>\n","      <td>9.9</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>1</td>\n","      <td>Good</td>\n","      <td>9.733333</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Sana</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","      <td>Good</td>\n","      <td>9.466667</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Mark</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","      <td>Good</td>\n","      <td>7.566667</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-01e35cd7-e05e-421f-853f-f768ce077ace')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-01e35cd7-e05e-421f-853f-f768ce077ace button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-01e35cd7-e05e-421f-853f-f768ce077ace');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1ca76f89-8da2-4426-9f05-12b919800d21\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1ca76f89-8da2-4426-9f05-12b919800d21')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1ca76f89-8da2-4426-9f05-12b919800d21 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5301d748-20fd-4e44-a380-25ac678778a9\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('mydf')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5301d748-20fd-4e44-a380-25ac678778a9 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('mydf');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"mydf","summary":"{\n  \"name\": \"mydf\",\n  \"rows\": 17,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Joe\",\n          \"Rajesh\",\n          \"Raj\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"M\",\n          \"N\",\n          \"K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8377578619709384,\n        \"min\": 7.7,\n        \"max\": 9.9,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          9.8,\n          8.9,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6471089552772393,\n        \"min\": 8.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10.0,\n          9.1,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.024372117589169,\n        \"min\": 7.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          9.9,\n          9.3,\n          7.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A+\",\n          \"A\",\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Conduct\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Good\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Average\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7891523540537007,\n        \"min\": 7.566666666666666,\n        \"max\": 9.9,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          9.466666666666667\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["mydf[[\"SEM1\"]].plot.line()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":451},"id":"nyqCqwsYkRzf","executionInfo":{"status":"ok","timestamp":1708938061150,"user_tz":-330,"elapsed":959,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"4b130a67-1ee0-4a5d-9d0a-5a40f55f6d61"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":28},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df2[\"SEM1\"].plot.line() #PLOTTING WITH PANDAS"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":451},"id":"Gi9pnTLPkvUg","executionInfo":{"status":"ok","timestamp":1708937157613,"user_tz":-330,"elapsed":782,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"c9d6b104-f857-40eb-afda-111e64e3270f"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":13},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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8ssv9+QzByg8dzRNw5w5c9y+FEvk83l86lOfwl133YXzzjvP7cuxXD6fx89+9jOcffbZ2LRpE+bNm4fLL798xq0xKzFgmUYsFkMul0NPT8+kj/f09KC/v9+lq7JHPp/H5s2bccUVV+D88893+3Is86//+q/Ys2cPtm7d6val2OLQoUN47LHHsHLlSmzfvh3//b//d3zhC1/Ad77zHbcvzRL33HMPPvGJT2D16tUIBoO48MILsXnzZtx0001uX5otxHOlEZ45ADAxMYEvf/nL+OQnP+mZYYEPPvggAoEAvvCFL7h9KbYYGBjA6Ogo/u7v/g7/5b/8F/z85z/HRz/6UXzsYx/DCy+8YPu/74lpzVSf22+/HW+88QZefPFFty/FMkePHsUXv/hF7Nixw5m9VRfk83lccskl+Nu//VsAwIUXXog33ngDjz/+OG655RaXr65+Tz31FL73ve/h+9//Ps477zzs3bsXmzdvRl9fnyd+vkaWyWRw4403Qtd1PPbYY25fjiVeeeUV/P3f/z327NkDTdPcvhxb5PN5AMANN9yAO+64AwBwwQUX4De/+Q0ef/xxXH311bb++8ywTKO7uxt+vx8nT56c9PGTJ0+it7fXpauy3uc//3n89Kc/xS9/+UssXLjQ7cuxzCuvvIKBgQFcdNFFCAQCCAQCeOGFF/DII48gEAggl8u5fYl1mz9/Ps4999xJHzvnnHMcqdZ3wl133WVkWdasWYNPfepTuOOOOzybMRPPFa8/c0Sw8t5772HHjh2eya7853/+JwYGBrB48WLjmfPee+/hS1/6EpYuXer25Vmiu7sbgUDAtecOA5ZphEIhXHzxxXj++eeNj+XzeTz//PNYv369i1dmDV3X8fnPfx7PPPMMfvGLX2DZsmVuX5Klrr32Wrz++uvYu3ev8eeSSy7BTTfdhL1798Lv97t9iXW74oorzjiKfvDgQSxZssSlK7JWMpmEzzf5EeX3+41VntcsW7YMvb29k5458XgcL7/8sieeOUApWHnrrbfw3HPPoaury+1LssynPvUp/P73v5/0zOnr68Ndd92F7du3u315lgiFQrj00ktde+5wS2gGd955J2655RZccskluOyyy7Bt2zaMjY3h1ltvdfvS6nb77bfj+9//Pn784x8jEokYe+QdHR1obm52+erqF4lEzqjHaW1tRVdXl2fqdO644w5s2LABf/u3f4sbb7wRu3fvxre+9S1861vfcvvSLHH99dfjgQcewOLFi3Heeefh1Vdfxde+9jV8+tOfdvvSajY6Ooq3337b+O/Dhw9j7969iEajWLx4MTZv3oy/+Zu/wcqVK7Fs2TJs2bIFfX19+MhHPuLeRVdhpp9v/vz5+LM/+zPs2bMHP/3pT5HL5YznTjQaRSgUcuuyKzbb729qABYMBtHb24tVq1Y5fak1m+1nvOuuu/Dxj38cV111Fa655ho8++yz+MlPfoKdO3faf3GunE1SyKOPPqovXrxYD4VC+mWXXaa/9NJLbl+SJQCU/fMv//Ivbl+abbx2rFnXdf0nP/mJfv755+vhcFhfvXq1/q1vfcvtS7JMPB7Xv/jFL+qLFy/Wm5qa9LPOOkv/X//rf+mpVMrtS6vZL3/5y7L33S233KLreuFo85YtW/Senh49HA7r1157rX7gwAF3L7oKM/18hw8fnva588tf/tLtS6/IbL+/qVQ81lzJz/hP//RP+ooVK/SmpiZ93bp1+o9+9CNHrk3TdYXbRhIREVFDYA0LERERSY8BCxEREUmPAQsRERFJjwELERERSY8BCxEREUmPAQsRERFJjwELERERSY8BCxEREUmPAQsRERFJjwELERERSY8BCxEREUmPAQsRERFJ7/8HskdgQBDHeJcAAAAASUVORK5CYII=\n"},"metadata":{}}]},{"cell_type":"code","source":["mydf=df2"],"metadata":{"id":"Pe2EMNCLmo_W","executionInfo":{"status":"ok","timestamp":1708937378583,"user_tz":-330,"elapsed":3,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["mydf=pd.read_csv(\"/content/grades_withnulls.csv\")\n","mv=mydf['SEM2'].mean()\n","print(mv)\n","mydf.fillna(mv,inplace=True)\n","mydf"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":599},"id":"o3rS81GnmMP2","executionInfo":{"status":"ok","timestamp":1708938220399,"user_tz":-330,"elapsed":533,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"986d82c9-5fce-4a7e-d0b1-1b113d0f270f"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["9.0\n"]},{"output_type":"execute_result","data":{"text/plain":["     Names Initials  SEM1  SEM2  SEM3 Grade  Placed\n","0      Joe        K   9.8  10.0   9.9    A+       1\n","1   Rajesh        M   8.9   9.1   9.3     A       1\n","2   Kissan        V   9.9   9.8  10.0     A       0\n","3     Mary        N   7.7   8.0   9.0     B       0\n","4     Jeen        K   9.8   9.1   9.9    A+       1\n","5      Raj        M   8.9   9.1   9.3     A       1\n","6   Hassan        V   9.9   9.0   9.2     A       1\n","7     Mari        N   7.7   8.0   7.1     B       1\n","8     Jess        K   9.0   9.1   9.9    A+       1\n","9   Rajini        M   9.0   9.1   9.3     A       0\n","10   Kiran        V   9.0   9.3   9.2     A       0\n","11    Maya        N   7.7   8.0   7.1     B       0\n","12   Jolin        K   9.8   9.1   9.9    A+       1\n","13  Rajesh        M   8.9   9.1   9.3     A       1\n","14    Riya        M   9.3   9.9  10.0     A       1\n","15    Sana        V   9.9   9.3   9.2     A       0\n","16    Mark        N   7.7   8.0   7.0     B       0"],"text/html":["\n","  <div id=\"df-8e37b042-03df-4f47-9b4a-c8fc46869d35\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Joe</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kissan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Mary</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>9.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jeen</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Raj</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Hassan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.0</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Mari</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Jess</td>\n","      <td>K</td>\n","      <td>9.0</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Rajini</td>\n","      <td>M</td>\n","      <td>9.0</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Kiran</td>\n","      <td>V</td>\n","      <td>9.0</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Maya</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Jolin</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Riya</td>\n","      <td>M</td>\n","      <td>9.3</td>\n","      <td>9.9</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Sana</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Mark</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8e37b042-03df-4f47-9b4a-c8fc46869d35')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8e37b042-03df-4f47-9b4a-c8fc46869d35 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8e37b042-03df-4f47-9b4a-c8fc46869d35');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-87a37ca0-2d0f-4d87-abc8-2f3c7fe569e0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-87a37ca0-2d0f-4d87-abc8-2f3c7fe569e0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-87a37ca0-2d0f-4d87-abc8-2f3c7fe569e0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_12c50c6e-923d-4bc7-98f5-83697a62bd74\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('mydf')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_12c50c6e-923d-4bc7-98f5-83697a62bd74 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('mydf');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"mydf","summary":"{\n  \"name\": \"mydf\",\n  \"rows\": 17,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Joe\",\n          \"Rajesh\",\n          \"Raj\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"M\",\n          \"N\",\n          \"K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8377578619709384,\n        \"min\": 7.7,\n        \"max\": 9.9,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          9.8,\n          8.9,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6471089552772393,\n        \"min\": 8.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10.0,\n          9.1,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.024372117589169,\n        \"min\": 7.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          9.9,\n          9.3,\n          7.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A+\",\n          \"A\",\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["mydf[\"SEM1\"].plot.line() #PLOTTING WITH PANDAS"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":451},"id":"SZFUfN5wm00u","executionInfo":{"status":"ok","timestamp":1708937420452,"user_tz":-330,"elapsed":669,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"faf12fd8-5174-4b8b-d71d-f74d8087eedc"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":20},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["mydf[[\"SEM1\",\"SEM2\"]].plot.line() #two graphs in a single frame"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"BcJ97jkqnDg0","executionInfo":{"status":"ok","timestamp":1708937730290,"user_tz":-330,"elapsed":15,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"25b7b829-4026-4f8b-e17f-5dddfb155458"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":22},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["mydf[[\"SEM1\",\"SEM2\"]].plot.line(subplots=True) #separte graphs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"qUiPSNoMoGHC","executionInfo":{"status":"ok","timestamp":1708937911837,"user_tz":-330,"elapsed":15,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"6ff4af3c-2bcc-4b4d-9179-9ca55b15fa21"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([<Axes: >, <Axes: >], dtype=object)"]},"metadata":{},"execution_count":26},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["mydf.plot.line(subplots=True) #ALL numeric graphs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"Hb2-uzBWo179","executionInfo":{"status":"ok","timestamp":1708938134381,"user_tz":-330,"elapsed":1454,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"079b0a38-c0de-4b41-9bdd-b75fa4562c80"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([<Axes: >, <Axes: >, <Axes: >, <Axes: >], dtype=object)"]},"metadata":{},"execution_count":34},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 4 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["mydf[\"Average\"]=(mydf[\"SEM1\"]+mydf[\"SEM2\"]+mydf[\"SEM3\"])/3\n","mydf"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":582},"id":"TriaGI8vqF-T","executionInfo":{"status":"ok","timestamp":1708938267057,"user_tz":-330,"elapsed":18,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"85896c70-03ab-42a5-b8af-5e813b0534fa"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Names Initials  SEM1  SEM2  SEM3 Grade  Placed   Average\n","0      Joe        K   9.8  10.0   9.9    A+       1  9.900000\n","1   Rajesh        M   8.9   9.1   9.3     A       1  9.100000\n","2   Kissan        V   9.9   9.8  10.0     A       0  9.900000\n","3     Mary        N   7.7   8.0   9.0     B       0  8.233333\n","4     Jeen        K   9.8   9.1   9.9    A+       1  9.600000\n","5      Raj        M   8.9   9.1   9.3     A       1  9.100000\n","6   Hassan        V   9.9   9.0   9.2     A       1  9.366667\n","7     Mari        N   7.7   8.0   7.1     B       1  7.600000\n","8     Jess        K   9.0   9.1   9.9    A+       1  9.333333\n","9   Rajini        M   9.0   9.1   9.3     A       0  9.133333\n","10   Kiran        V   9.0   9.3   9.2     A       0  9.166667\n","11    Maya        N   7.7   8.0   7.1     B       0  7.600000\n","12   Jolin        K   9.8   9.1   9.9    A+       1  9.600000\n","13  Rajesh        M   8.9   9.1   9.3     A       1  9.100000\n","14    Riya        M   9.3   9.9  10.0     A       1  9.733333\n","15    Sana        V   9.9   9.3   9.2     A       0  9.466667\n","16    Mark        N   7.7   8.0   7.0     B       0  7.566667"],"text/html":["\n","  <div id=\"df-12ae7780-174a-45a8-8bd8-557cde704ac9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Names</th>\n","      <th>Initials</th>\n","      <th>SEM1</th>\n","      <th>SEM2</th>\n","      <th>SEM3</th>\n","      <th>Grade</th>\n","      <th>Placed</th>\n","      <th>Average</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Joe</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","      <td>9.900000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","      <td>9.100000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kissan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.8</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>0</td>\n","      <td>9.900000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Mary</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>9.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","      <td>8.233333</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jeen</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","      <td>9.600000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Raj</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","      <td>9.100000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Hassan</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.0</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>1</td>\n","      <td>9.366667</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Mari</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>1</td>\n","      <td>7.600000</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Jess</td>\n","      <td>K</td>\n","      <td>9.0</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","      <td>9.333333</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Rajini</td>\n","      <td>M</td>\n","      <td>9.0</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>0</td>\n","      <td>9.133333</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Kiran</td>\n","      <td>V</td>\n","      <td>9.0</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","      <td>9.166667</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Maya</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.1</td>\n","      <td>B</td>\n","      <td>0</td>\n","      <td>7.600000</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Jolin</td>\n","      <td>K</td>\n","      <td>9.8</td>\n","      <td>9.1</td>\n","      <td>9.9</td>\n","      <td>A+</td>\n","      <td>1</td>\n","      <td>9.600000</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Rajesh</td>\n","      <td>M</td>\n","      <td>8.9</td>\n","      <td>9.1</td>\n","      <td>9.3</td>\n","      <td>A</td>\n","      <td>1</td>\n","      <td>9.100000</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Riya</td>\n","      <td>M</td>\n","      <td>9.3</td>\n","      <td>9.9</td>\n","      <td>10.0</td>\n","      <td>A</td>\n","      <td>1</td>\n","      <td>9.733333</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Sana</td>\n","      <td>V</td>\n","      <td>9.9</td>\n","      <td>9.3</td>\n","      <td>9.2</td>\n","      <td>A</td>\n","      <td>0</td>\n","      <td>9.466667</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Mark</td>\n","      <td>N</td>\n","      <td>7.7</td>\n","      <td>8.0</td>\n","      <td>7.0</td>\n","      <td>B</td>\n","      <td>0</td>\n","      <td>7.566667</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-12ae7780-174a-45a8-8bd8-557cde704ac9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-12ae7780-174a-45a8-8bd8-557cde704ac9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-12ae7780-174a-45a8-8bd8-557cde704ac9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e757b22b-c521-48c1-bf0a-38aa579e993e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e757b22b-c521-48c1-bf0a-38aa579e993e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e757b22b-c521-48c1-bf0a-38aa579e993e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_7687faac-22f9-46a3-84f5-f729da8376ed\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('mydf')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_7687faac-22f9-46a3-84f5-f729da8376ed button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('mydf');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"mydf","summary":"{\n  \"name\": \"mydf\",\n  \"rows\": 17,\n  \"fields\": [\n    {\n      \"column\": \"Names\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Joe\",\n          \"Rajesh\",\n          \"Raj\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"M\",\n          \"N\",\n          \"K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8377578619709384,\n        \"min\": 7.7,\n        \"max\": 9.9,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          9.8,\n          8.9,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6471089552772393,\n        \"min\": 8.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10.0,\n          9.1,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEM3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.024372117589169,\n        \"min\": 7.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          9.9,\n          9.3,\n          7.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Grade\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"A+\",\n          \"A\",\n          \"B\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Placed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Average\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7891523540537007,\n        \"min\": 7.566666666666666,\n        \"max\": 9.9,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          9.466666666666667,\n          9.733333333333334\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["mydf.plot(kind=\"scatter\", x=\"Average\",y=\"Names\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"Z2Fw97DupuDp","executionInfo":{"status":"ok","timestamp":1708938464661,"user_tz":-330,"elapsed":797,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"683481d5-4d3a-4618-d31d-71bae2d973f8"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Average', ylabel='Names'>"]},"metadata":{},"execution_count":40},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["mydf.plot(kind=\"hist\", x=\"Names\",y=\"Average\")#y-axis numeric,x-axis count"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"pKvNvoCkq67e","executionInfo":{"status":"ok","timestamp":1708938629490,"user_tz":-330,"elapsed":825,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}},"outputId":"0ab414fe-4d36-4d92-cac8-94c47447aee0"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='Frequency'>"]},"metadata":{},"execution_count":42},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["mydf.to_csv(\"mydf.csv\")\n","#dfname.to_csv(\"filename.csv\")"],"metadata":{"id":"hrawrja5ro1N","executionInfo":{"status":"ok","timestamp":1708938945575,"user_tz":-330,"elapsed":473,"user":{"displayName":"pachigolla sandeep","userId":"11582805781753807792"}}},"execution_count":43,"outputs":[]}]}